export const translations = {
  en: {
    // Hero Section
    hero: {
      title: "Welcome to the Aleo Network",
      subtitle: "Enter the Zero-Knowledge realm",
      prompt: "Hint: type the command",
      placeholder: "type 'connect' to begin",
      connectError: "Command not recognized. Type \"connect\" to begin your journey.",
      connecting: [
        "INITIATING BREACH PROTOCOL...",
        "SCANNING NETWORK NODES...",
        "[‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà] 100% FIREWALL BYPASSED",
        "INJECTING ZK-PROOF PAYLOAD...",
        "DECRYPTING QUANTUM SIGNATURES...",
        "0x7F3A...B92E > ACCESS_GRANTED",
        "ESTABLISHING SECURE CHANNEL...",
        "SYNCHRONIZING BLOCKCHAIN STATE...",
        "‚ö° NEURAL LINK ESTABLISHED ‚ö°",
        "‚úì Access granted. Welcome, Prover #001."
      ]
    },

    // Missions List
    missions: {
      title: "THE ZK ODYSSEY",
      subtitle: "Prove what you learn. Unlock the hidden web.",
      statusPanel: {
        prover: "Prover #001",
        level: "Level",
        knowledge: "Knowledge",
        proofs: "Proofs"
      },
      locked: "üîí LOCKED",
      completed: "‚úì COMPLETED",
      startMission: "START MISSION",
      viewBadge: "üèÜ VIEW VALIDATOR BADGE",
      bonusSection: "‚ö° BONUS MISSION",
      playNow: "PLAY NOW",
      goal: "Goal",
      reward: "Reward"
    },

    // Mission Names and Goals
    missionsList: {
      genesis: {
        name: "The Genesis",
        goal: "Understand what ZK is",
        reward: "Proof of Knowledge #1",
        description: "Learn the fundamentals of zero-knowledge proofs and understand how Aleo enables private applications on the blockchain. Discover real-world use cases and the power of privacy-preserving technology."
      },
      language: {
        name: "The Language",
        goal: "Learn Leo basics",
        reward: "Proof of Mastery #2",
        description: "Master the Leo programming language - a statically-typed functional language designed for writing private applications. Learn syntax, data types, and write your first ZK program."
      },
      circuit: {
        name: "The Circuit",
        goal: "Create your first circuit",
        reward: "Proof of Build #3",
        description: "Build your first zero-knowledge circuit and understand how Leo code compiles into mathematical proofs. Learn about records, private state, and the Prover-Verifier model."
      },
      network: {
        name: "The Network",
        goal: "Deploy dApp on Aleo",
        reward: "Proof of Deployment #4",
        description: "Deploy your first decentralized application to the Aleo network. Learn about network architecture, off-chain execution, on-chain validation, and the deployment process."
      },
      validator: {
        name: "The Validator",
        goal: "Pass knowledge test",
        reward: "zk Badge: Validator",
        description: "Test your knowledge of zero-knowledge proofs, Leo language, circuits, and Aleo network. Pass the final exam to prove you've mastered the fundamentals of private blockchain development."
      },
      howAleoWorks: {
        name: "How Aleo Works",
        goal: "Understand Aleo architecture",
        reward: "Proof of Understanding #4",
        description: "Deep dive into Aleo's unique architecture, consensus mechanism, and transaction flow. Learn how off-chain execution with on-chain validation creates a scalable and private blockchain."
      },
      builder: {
        name: "Circuit Builder",
        goal: "Build ZK circuits",
        reward: "Bonus: Builder Badge",
        description: "Interactive bonus game where you build and test ZK circuits in real-time. Experiment with different circuit designs and see how they generate proofs."
      },
      ledger: {
        name: "Act VI ‚Äî The Ledger",
        goal: "Inside the Aleo Blockchain",
        reward: "Ledger Master Badge",
        description: "Advanced mission exploring blockchain internals: mempool, block structure, state commitment, and block building. Master the ledger mechanics."
      }
    },

    // Circuit Builder
    circuitBuilder: {
      title: "CIRCUIT BUILDER",
      back: "BACK",
      bonus: "BONUS",
      task: "TASK",
      hint: "HINT",
      show: "Show",
      hide: "Hide",
      components: "COMPONENTS",
      run: "RUN",
      running: "‚ö° SIMULATING...",
      clear: "üóëÔ∏è CLEAR",
      testCases: "TEST CASES",
      test: "Test",
      pass: "PASS",
      fail: "FAIL",
      expected: "Expected",
      got: "Got",
      runSimulation: "Run simulation",
      toCheck: "to check",
      levelComplete: "LEVEL COMPLETE!",
      nextLevel: "NEXT LEVEL ‚Üí",
      allComplete: "üèÜ ALL LEVELS COMPLETE!",
      stats: "STATISTICS",
      componentsCount: "Components",
      connections: "Connections",
      level: "Level",
      legend: "LEGEND",
      output: "Output",
      input: "Input",
      connection: "Connection",
      instructions: {
        drag: "Drag & drop",
        connect: "Connect dots",
        delete: "Delete"
      },
      levels: {
        equality: {
          name: "Simple Equality",
          description: "Create a circuit to check a == b",
          hint: "Use XOR and NOT gates. If a XOR b = 0, they are equal"
        },
        range: {
          name: "Range Check",
          description: "Check if value is in range [01, 11]",
          hint: "Use AND and OR to check bits"
        },
        comparison: {
          name: "Private Comparison",
          description: "a > b without revealing values",
          hint: "Use combination of AND, NOT for bitwise comparison"
        }
      },
      gates: {
        and: "logical AND",
        or: "logical OR",
        not: "inversion",
        xor: "exclusive OR"
      }
    },

    // Zero Room
    zeroRoom: {
      entering: "ENTERING ZERO ROOM",
      initializing: "Initializing quantum space...",
      generating: "GENERATING ZK-BADGE",
      scanning: "Scanning progress",
      verifying: "Verifying proofs",
      building: "Building Merkle Tree",
      signature: "Generating cryptographic signature",
      compiling: "Compiling ZK-BADGE...",
      badge: "ZK-BADGE v1.0",
      validator: "VALIDATOR",
      zkMaster: "ZK MASTER",
      missions: "Missions",
      level: "Level",
      expert: "EXPERT",
      zkScore: "ZK Score",
      uniqueId: "Unique ID",
      backToMissions: "Back to Missions",
      shareBadge: "Share Badge",
      badgeCopied: "Badge info copied to clipboard!",
      achievements: "Achievements",
      zkKnowledge: "üéì ZK Knowledge - Mastered",
      leoMaster: "‚ö° Leo Master - Mastered",
      networkPro: "üöÄ Network Pro - Mastered",
      congratulations: "CONGRATULATIONS!",
      successMessage: "You have successfully completed all Aleo Odyssey missions",
      expertMessage: "You are now a certified Zero Knowledge Proof expert"
    },

    // Wallet Connection
    wallet: {
      connect: "Connect Wallet",
      chooseWallet: "Choose a wallet to connect to Aleo Odyssey",
      leoWallet: "Leo Wallet",
      puzzleWallet: "Puzzle Wallet",
      available: "Available",
      notInstalled: "Not installed",
      connecting: "Connecting...",
      disconnect: "Disconnect",
      installExtension: "Install wallet extension to connect",
      refreshPage: "üí° Refresh the page after installing the extension",
      debugConsole: "üîç Call window.debugAleoWallets() in console for diagnostics",
      close: "Close",
      refreshStatus: "Refresh wallet status",
      errors: {
        leoNotFound: "Leo Wallet not found. Install the Leo Wallet extension.",
        leoNotSupported: "Leo Wallet does not support connection",
        puzzleNotFound: "Puzzle Wallet not found. Install the Puzzle Wallet extension.",
        unknownWallet: "Unknown wallet type",
        connectionFailed: "Failed to get address from wallet",
        notConnected: "Wallet not connected"
      },
      status: {
        available: "Available",
        notInBrowser: "Not in browser",
        leoNotFound: "Leo Wallet not found in window.leo",
        leoNoRequest: "Leo Wallet has no request method",
        puzzleAvailable: "Available (window.puzzle)",
        puzzleSdk: "Available (Puzzle SDK)",
        puzzleUnavailable: "Puzzle Wallet unavailable"
      }
    },

    // Common
    common: {
      back: "‚Üê BACK",
      next: "NEXT ‚Üí",
      complete: "COMPLETE",
      submit: "SUBMIT",
      check: "CHECK",
      restart: "RESTART",
      continue: "CONTINUE"
    },

    // Individual Missions Content
    theGenesis: {
      back: "‚Üê BACK TO MISSIONS",
      progress: "Progress",
      steps: "Steps",
      title: "The Genesis",
      subtitle: "Understand what ZK is",
      beginner: "BEGINNER",
      reward: "Proof of Knowledge #1",
      step1: {
        title: "What is Zero Knowledge Proof?",
        description: "Zero Knowledge Proof (ZK-proof) is a cryptographic protocol that allows one party (prover) to prove to another party (verifier) that a statement is true, without revealing any additional information beyond the fact of its truth.",
        example: "üí° Simple example:",
        exampleText: "Imagine: you want to prove that you know the password to a safe without saying the password itself. A ZK protocol allows you to do this ‚Äî open the safe without revealing the combination.",
        button: "GOT IT, CONTINUE ‚Üí"
      },
      step2new: {
        title: "ZK in Real Life",
        description: "Zero Knowledge proofs are already being used in real applications and solving practical problems. Let's look at some examples:",
        useCase1Title: "Private Banking",
        useCase1Text: "Prove you have enough funds for a loan without revealing your exact balance. Banks can verify solvency without accessing your financial history.",
        useCase2Title: "Anonymous Voting",
        useCase2Text: "Prove you're eligible to vote and that you voted without revealing who you voted for. Complete anonymity with verifiability.",
        useCase3Title: "Fair Gaming",
        useCase3Text: "Prove your move is valid in a game without revealing your strategy. Prevents cheating while maintaining game intrigue.",
        button: "FASCINATING! ‚Üí"
      },
      step3new: {
        title: "How ZK Math Works",
        description: "ZK-proofs are based on complex cryptographic mathematics. Let's understand the basic components without diving into formulas:",
        componentsTitle: "üîê Three Main Components:",
        component1: "Witness",
        component1Text: "your secret data (password, private key, balance)",
        component2: "Statement",
        component2Text: "what you want to prove (\"I know the password\")",
        component3: "Proof",
        component3Text: "mathematical evidence that doesn't reveal the secret",
        protocolTitle: "‚ö° zkSNARK Protocol",
        protocolText: "Aleo uses zkSNARK (Zero-Knowledge Succinct Non-Interactive Argument of Knowledge) - a protocol allowing creation of compact proofs that are quickly verified.",
        button: "UNDERSTOOD ‚Üí"
      },
      step2: {
        title: "Why do we need Aleo?",
        description: "Aleo is a blockchain platform that uses Zero Knowledge technologies to create private and scalable decentralized applications.",
        privacy: "üîí Privacy",
        privacyText: "All computations happen privately. No one sees your data.",
        speed: "‚ö° Speed",
        speedText: "ZK-proofs allow fast transaction verification.",
        button: "UNDERSTOOD ‚Üí"
      },
      step3: {
        title: "Real-world applications",
        description: "ZK technologies open new possibilities for private applications:",
        defi: "üí∞ DeFi with privacy",
        defiText: "Trading without revealing balances and strategies",
        games: "üéÆ Games",
        gamesText: "Private moves, fair mechanics without cheaters",
        medicine: "üè• Medicine",
        medicineText: "Data exchange without violating confidentiality",
        button: "COMPLETE MISSION ‚úì"
      }
    },
    
    theLanguage: {
      back: "‚Üê BACK TO MISSIONS",
      progress: "Progress",
      steps: "Steps",
      title: "The Language",
      subtitle: "Learn the basics of Leo language",
      intermediate: "INTERMEDIATE",
      reward: "Proof of Mastery #2",
      step1: {
        title: "What is Leo?",
        description: "Leo is a statically typed functional programming language created specifically for writing private applications on the Aleo blockchain. Leo's syntax is similar to Rust, but optimized for creating zero-knowledge circuits.",
        safety: "‚ö° Safety",
        safetyText: "Strong typing prevents errors at compile time",
        privacy: "üîí Privacy",
        privacyText: "All code is automatically compiled into ZK-proofs",
        button: "INTERESTING, SHOW ME THE SYNTAX ‚Üí"
      },
      step2: {
        title: "Leo Program Structure",
        description: "Each Leo program starts with a program declaration and contains transition functions that define your application logic.",
        codeTitle: "üìù BASIC STRUCTURE",
        codeFile: "hello.aleo",
        note1: "Program declaration with unique name",
        note2: "Main function to be executed",
        note3: "Parameter with type (u32 = unsigned 32-bit integer)",
        button: "GOT IT ‚Üí"
      },
      step3: {
        title: "Data Types in Leo",
        description: "Leo supports various data types for working with numbers, boolean values, addresses, and data structures.",
        numeric: "Numeric types",
        numericU: "‚Ä¢ u8, u16, u32, u64, u128 - unsigned",
        numericI: "‚Ä¢ i8, i16, i32, i64, i128 - signed",
        numericField: "‚Ä¢ field - large numbers",
        other: "Other types",
        otherBool: "‚Ä¢ bool - true/false",
        otherAddress: "‚Ä¢ address - Aleo addresses",
        otherStruct: "‚Ä¢ struct - custom structures",
        codeTitle: "üí° USAGE EXAMPLE",
        codeFile: "calculate.leo",
        button: "GOT IT, LET'S PRACTICE ‚Üí"
      },
      step4: {
        title: "Records and Structs",
        description: "In Leo, you can create custom data structures using struct and record. Record is a special type that stores private data on-chain.",
        codeTitle: "üìù TOKEN STRUCTURE",
        codeFile: "token.leo",
        recordTitle: "üîí What is record?",
        recordText: "Record is a special data structure in Leo that stores encrypted data on-chain. Only the record owner can decrypt and use it.",
        recordNote: "private data structure stored on blockchain",
        button: "GOT IT ‚Üí"
      },
      step5: {
        title: "Visibility Modifiers",
        description: "Leo has three visibility modifiers that control how data is processed and stored: public, private, and constant.",
        publicTitle: "public",
        publicText: "Data visible to everyone on the blockchain. Used for transparent state.",
        privateTitle: "private",
        privateText: "Encrypted data, visible only to the owner. The basis of Aleo privacy.",
        constantTitle: "constant",
        constantText: "Compile-time constants that are embedded in the circuit.",
        codeTitle: "üí° EXAMPLE OF USE:",
        button: "UNDERSTOOD ‚Üí"
      },
      step6: {
        title: "Practice: Write Your Code",
        description: "Write a transition function that takes two u32 numbers and returns their sum:",
        hint: "üí° HINT",
        hintShow: "Show",
        hintHide: "Hide",
        hintTitle: "Command format:",
        hintText: "transition main(a: u32, b: u32) -> u32 { ... }",
        placeholder: "Write your code here...",
        check: "CHECK CODE",
        success: "‚úì Excellent! Your code is correct!",
        error: "‚úó Try again. Hint: start with \"transition main\"",
        complete: "Mission Complete!",
        reward: "You received: Proof of Mastery #2",
        returning: "Returning to missions..."
      }
    },
    
    theCircuit: {
      back: "‚Üê BACK TO MISSIONS",
      progress: "Progress",
      steps: "Steps",
      title: "The Circuit",
      subtitle: "Create your first circuit",
      intermediate: "INTERMEDIATE",
      reward: "Proof of Build #3",
      step1: {
        title: "What is a ZK-Circuit?",
        description: "A ZK-Circuit (zero-knowledge proof circuit) is a mathematical representation of a computation that can be proven without revealing the input data. This is the core of any ZK application on Aleo.",
        howItWorks: "üîÑ How it works:",
        step1Text: "You write a program in Leo",
        step2Text: "The compiler converts it into a circuit",
        step3Text: "The circuit generates a proof",
        step4Text: "Anyone can verify the proof",
        button: "UNDERSTOOD ‚Üí"
      },
      step2: {
        title: "Creating Your First Circuit",
        description: "Let's create a simple circuit for private token storage. We'll use the record structure to store private state.",
        codeTitle: "üìù PRIVATE TOKEN",
        codeFile: "token.leo",
        keyPoints: "üîë Key Points:",
        point1: "record - private data type",
        point2: "All data inside record is private",
        point3: "Only the owner can use their records",
        point4: "Transactions create new records, destroying old ones",
        button: "COOL, WHAT'S NEXT? ‚Üí"
      },
      step3new: {
        title: "Compiling to Circuit",
        description: "Leo compiler translates your code into a ZK-circuit. Let's understand this process:",
        step1Title: "Parsing",
        step1Text: "The compiler analyzes the syntax and creates an abstract syntax tree (AST) from your code.",
        step2Title: "Circuit Generation",
        step2Text: "AST is converted into arithmetic constraints - equations that describe your computation.",
        step3Title: "Optimization",
        step3Text: "The compiler optimizes constraints to reduce proof generation time and size.",
        button: "INTERESTING ‚Üí"
      },
      step4new: {
        title: "Circuit Optimization",
        description: "Optimizing ZK-circuits is crucial for performance. Smaller circuits mean faster proofs and lower costs.",
        whyTitle: "Why optimize?",
        why1: "Faster proof generation - less time to create proof",
        why2: "Smaller proof size - easier to transmit and store",
        why3: "Lower gas costs - cheaper transactions on blockchain",
        technique1: "Constraint Reduction",
        technique1Text: "Minimize the number of arithmetic constraints while maintaining computation correctness.",
        technique2: "Lookup Tables",
        technique2Text: "Use precomputed values for common operations instead of recalculating them.",
        button: "GOT IT ‚Üí"
      },
      step3: {
        title: "Knowledge Check",
        description: "What is the data type in Leo used to store private state?",
        yourAnswer: "YOUR ANSWER (one word)",
        placeholder: "Enter your answer...",
        hint: "üí° HINT:",
        hintShow: "Show",
        hintHide: "Hide",
        hintText: "Look at the code above. What keyword is used before \"Token\"?",
        check: "CHECK ANSWER ‚úì",
        success: "‚úì Correct! record is the private data type.",
        error: "‚úó Incorrect. Hint: it starts with 'r'."
      },
      step4: {
        title: "Final Test",
        description: "Who in a ZK system generates the proof based on private data?",
        option1: "Prover",
        option2: "Verifier",
        option3: "Compiler",
        check: "CHECK ‚úì",
        success: "‚úì Correct! The Prover creates the proof.",
        error: "‚úó Incorrect. Who creates the proof in a ZK system?"
      }
    },
    
    theNetwork: {
      back: "‚Üê BACK TO MISSIONS",
      progress: "Progress",
      steps: "Steps",
      title: "The Network",
      subtitle: "Deploy dApp on Aleo",
      advanced: "ADVANCED",
      reward: "Proof of Deployment #4",
      step1: {
        title: "Aleo Network Architecture",
        description: "Aleo is a Layer 1 blockchain where all computations happen off-chain with proofs, and validation happens on-chain. This ensures scalability and privacy.",
        offchainTitle: "‚öôÔ∏è Off-chain",
        offchainText: "Program execution and proof generation",
        onchainTitle: "‚õìÔ∏è On-chain",
        onchainText: "Proof verification and state storage",
        privacyTitle: "üîí Privacy",
        privacyText: "Privacy of data and application logic",
        networkComponents: "üåê Network Components:",
        validators: "Validators:",
        validatorsText: "verify transactions and create blocks",
        provers: "Provers:",
        proversText: "generate ZK-proofs",
        clients: "Clients:",
        clientsText: "interact with applications",
        button: "UNDERSTOOD, HOW TO DEPLOY? ‚Üí"
      },
      step2new: {
        title: "Aleo Consensus Mechanism",
        description: "Aleo uses a hybrid consensus combining Proof of Stake (PoS) for validation and Proof of Work (PoW) for proving. This ensures both network security and decentralization.",
        posTitle: "Proof of Stake (PoS)",
        posText: "Validators stake credits and verify transactions. They earn rewards for honest work and lose stake for malicious actions.",
        powTitle: "Proof of Work (PoW)",
        powText: "Provers compete to generate ZK-proofs. They use computational power to create proofs and earn rewards.",
        coinbaseTitle: "üí∞ Coinbase Puzzle:",
        coinbaseText: "Aleo uses a unique Coinbase Puzzle - a computational task that generates both network security and ZK-proofs simultaneously.",
        button: "UNDERSTOOD ‚Üí"
      },
      step3new: {
        title: "Transactions and Records",
        description: "In Aleo, there are three types of transactions. Each serves a specific purpose in the network.",
        deployTitle: "Deploy",
        deployText: "Publishes a new program to the blockchain. The program becomes available to all users.",
        executeTitle: "Execute",
        executeText: "Calls a transition function of a deployed program. Creates new records and spends old ones.",
        feeTitle: "Fee",
        feeText: "Pays for transaction execution. Compensates validators and provers for their work.",
        recordTitle: "üîí Records - private state:",
        recordText: "Records store private data on-chain. Only the owner can decrypt and use their records. Each transaction consumes input records and creates new output records.",
        button: "GOT IT ‚Üí"
      },
      step2: {
        title: "Program Deployment Process",
        description: "To deploy a program to Aleo, you need to follow several steps: write code, compile, generate keys, and deploy to the network.",
        step1Title: "Creating a project",
        step1Command: "leo new my_app",
        step2Title: "Writing code",
        step2Command: "cd my_app && edit src/main.leo",
        step3Title: "Compilation",
        step3Command: "leo build",
        step4Title: "Deploying to network",
        step4Command: "leo deploy --network testnet",
        important: "‚ö†Ô∏è Important:",
        point1: "Deploying requires Aleo credits (free on testnet)",
        point2: "Each program has a unique name in the network",
        point3: "Programs cannot be changed after deployment",
        button: "GREAT, LET'S PRACTICE! ‚Üí"
      },
      step3: {
        title: "Choose Deployment Network",
        description: "Aleo provides several networks for development and production. For training, we'll use testnet.",
        mainnet: "Mainnet",
        mainnetLabel: "Production",
        mainnetDesc: "Main network for production applications. Requires real Aleo credits.",
        testnet: "Testnet",
        testnetLabel: "Recommended",
        testnetDesc: "Test network for development. Free credits from faucet.",
        local: "Local",
        localLabel: "Development",
        localDesc: "Local node on your computer for fast development.",
        button: "SELECTED, LET'S DEPLOY! ‚Üí"
      },
      step4: {
        title: "Deploy Program",
        description: "Enter the command to deploy your program to the selected network. Use Leo CLI command.",
        terminal: "TERMINAL",
        hint: "üí° Hint:",
        hintShow: "Show",
        hintHide: "Hide",
        hintCommand: "Command:",
        hintButton: "üëÅÔ∏è Show hint",
        selectedNetwork: "üìã Selected network:",
        notSelected: "Not selected",
        placeholder: "leo deploy...",
        deploy: "RUN DEPLOYMENT üöÄ",
        building: "üì¶ Building program...",
        generating: "üîê Generating proving key...",
        connecting: "üì° Connecting to Aleo testnet...",
        success: "‚úì Program deployed successfully!",
        error: "‚úó Incorrect command or network. Use \"leo deploy\" and select testnet.",
        missionComplete: "Mission Complete!",
        reward: "You received: Proof of Deployment #4",
        congratsMessage: "Your application successfully deployed to Aleo Network!",
        returning: "Returning to missions..."
      },
      step7: {
        title: "Interactive Network Visualization",
        description: "Now let's see how the Aleo network works in action. Interact with nodes and simulate the proof flow.",
        nodesTitle: "üåê Network Nodes (click to learn more)",
        prover: "Prover",
        proverDesc: "Generates ZK-proofs from program execution",
        proverActive: "Generating computational proof...",
        validator: "Validator",
        validatorDesc: "Verifies proofs and confirms transactions",
        validatorActive: "Verifying proof validity...",
        blockchain: "Blockchain",
        blockchainDesc: "Stores confirmed transactions on-chain",
        blockchainActive: "Writing transaction to blockchain...",
        simulateTitle: "üîÑ Simulate Proof Flow",
        simulateDesc: "Enter input data and watch how it transforms into a ZK-proof, gets verified, and recorded on-chain.",
        inputPlaceholder: "Enter your data (e.g., 42)",
        executeButton: "GENERATE & EXECUTE PROOF",
        generating: "Generating ZK-proof...",
        verifying: "Validator checking proof...",
        writing: "Writing to blockchain...",
        proofSuccess: "Proof successfully verified and recorded!",
        proofPrivate: "Your input data remains private, only the proof is public.",
        recordsTitle: "üîí Private Records",
        showRecords: "Show examples",
        hideRecords: "Hide",
        record1Title: "Record #1 (Before transaction)",
        record2Title: "Record #2 (After transaction)",
        recordsNote: "Records are encrypted on-chain. Only owners can decrypt their data."
      }
    },
    
    howAleoWorks: {
      back: "‚Üê BACK TO MISSIONS",
      progress: "Progress",
      steps: "Steps",
      title: "How Aleo Works",
      subtitle: "Deep dive into Aleo's architecture and consensus mechanism",
      intermediate: "INTERMEDIATE",
      reward: "Proof of Understanding #4",
      
      step1: {
        title: "Aleo Network Architecture",
        description: "Aleo is a Layer 1 blockchain where all computations happen off-chain with proofs, and validation happens on-chain. This ensures scalability and privacy.",
        offchainTitle: "Off-chain",
        offchainText: "Program execution and proof generation",
        onchainTitle: "On-chain",
        onchainText: "Proof verification and state storage",
        componentsTitle: "üåê Network Components:",
        prover: "Prover",
        proverText: "generates ZK-proofs from program execution",
        validator: "Validator",
        validatorText: "verifies proofs and confirms transactions",
        client: "Client",
        clientText: "interacts with applications",
        button: "UNDERSTOOD, HOW DOES CONSENSUS WORK? ‚Üí"
      },
      
      step2: {
        title: "Aleo Consensus Mechanism",
        description: "Aleo uses a hybrid consensus combining Proof of Stake (PoS) for validation and Proof of Work (PoW) for proving. This ensures both network security and decentralization.",
        posTitle: "Proof of Stake (PoS)",
        posText: "Validators stake credits and verify transactions. They earn rewards for honest work and lose stake for malicious actions.",
        powTitle: "Proof of Work (PoW)",
        powText: "Provers compete to generate ZK-proofs. They use computational power to create proofs and earn rewards.",
        coinbaseTitle: "üí∞ Coinbase Puzzle:",
        coinbaseText: "Aleo uses a unique Coinbase Puzzle - a computational task that generates both network security and ZK-proofs simultaneously.",
        button: "UNDERSTOOD ‚Üí"
      },
      
      step3: {
        title: "Transactions and Records",
        description: "In Aleo, there are three types of transactions. Each serves a specific purpose in the network.",
        deployTitle: "Deploy",
        deployText: "Publishes a new program to the blockchain. The program becomes available to all users.",
        executeTitle: "Execute",
        executeText: "Calls a transition function of a deployed program. Creates new records and spends old ones.",
        feeTitle: "Fee",
        feeText: "Pays for transaction execution. Compensates validators and provers for their work.",
        recordTitle: "üîí Records - private state:",
        recordText: "Records store private data on-chain. Only the owner can decrypt and use their records. Each transaction consumes input records and creates new output records.",
        button: "GOT IT ‚Üí"
      },
      
      step4: {
        title: "Transaction Execution Flow",
        description: "Let's understand how a transaction flows through the Aleo network from initiation to finalization.",
        step1Title: "1. Transaction Initiation",
        step1Text: "Client creates a transaction with private inputs and calls a program function.",
        step2Title: "2. Off-chain Execution",
        step2Text: "Program executes off-chain, generating ZK-proofs that prove correct execution without revealing inputs.",
        step3Title: "3. Proof Submission",
        step3Text: "Prover submits the transaction with ZK-proofs to the network for validation.",
        step4Title: "4. On-chain Validation",
        step4Text: "Validators verify the ZK-proofs and add the transaction to a block if valid.",
        button: "UNDERSTOOD ‚Üí"
      },
      
      step5: {
        title: "Interactive Network Visualization",
        description: "Now let's see how the Aleo network works in action. The 3D visualization shows the network components and their interactions.",
        visualizationText: "Move your mouse to explore the 3D network. Each colored node represents a different component of the Aleo ecosystem.",
        button: "COMPLETE MISSION ‚úì"
      },
      oldsteps: {
        old: `
          <div class="space-y-6">
            <div class="bg-gradient-to-r from-[#00fff7]/10 to-[#c084fc]/10 p-6 rounded-xl border border-[#00fff7]/20">
              <h3 class="text-2xl font-bold text-[#00fff7] mb-4">‚öîÔ∏è The Privacy Battle</h3>
              <p class="text-gray-300 mb-4">
                While Ethereum revolutionized smart contracts, it has a fundamental flaw: 
                <span class="text-red-400 font-bold">everything is public</span>. 
                Aleo fixes this by making privacy the default, not an afterthought.
              </p>
            </div>
            
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
              <div class="bg-gradient-to-br from-red-500/10 to-red-600/5 p-6 rounded-xl border border-red-500/20">
                <h4 class="text-xl font-bold text-red-400 mb-4 flex items-center">
                  <span class="text-2xl mr-2">üîç</span>
                  Ethereum's Problem
                </h4>
                <ul class="space-y-3 text-gray-300">
                  <li class="flex items-start">
                    <span class="text-red-400 mr-2">‚ùå</span>
                    <span>All transaction data is public and visible</span>
                  </li>
                  <li class="flex items-start">
                    <span class="text-red-400 mr-2">‚ùå</span>
                    <span>Smart contract state is transparent</span>
                  </li>
                  <li class="flex items-start">
                    <span class="text-red-400 mr-2">‚ùå</span>
                    <span>User balances and transfers are exposed</span>
                  </li>
                  <li class="flex items-start">
                    <span class="text-red-400 mr-2">‚ùå</span>
                    <span>Privacy requires complex workarounds (Tornado Cash)</span>
                  </li>
                </ul>
              </div>
              
              <div class="bg-gradient-to-br from-[#00fff7]/10 to-[#c084fc]/10 p-6 rounded-xl border border-[#00fff7]/20">
                <h4 class="text-xl font-bold text-[#00fff7] mb-4 flex items-center">
                  <span class="text-2xl mr-2">üõ°Ô∏è</span>
                  Aleo's Solution
                </h4>
                <ul class="space-y-3 text-gray-300">
                  <li class="flex items-start">
                    <span class="text-green-400 mr-2">‚úÖ</span>
                    <span>Private records by default</span>
                  </li>
                  <li class="flex items-start">
                    <span class="text-green-400 mr-2">‚úÖ</span>
                    <span>Zero-knowledge proofs hide computation</span>
                  </li>
                  <li class="flex items-start">
                    <span class="text-green-400 mr-2">‚úÖ</span>
                    <span>Only proofs are public, data stays private</span>
                  </li>
                  <li class="flex items-start">
                    <span class="text-green-400 mr-2">‚úÖ</span>
                    <span>Privacy is built into the protocol</span>
                  </li>
                </ul>
              </div>
            </div>
            
            <div class="bg-gradient-to-r from-[#c084fc]/10 to-[#00fff7]/10 p-6 rounded-xl border border-[#c084fc]/20">
              <h3 class="text-2xl font-bold text-[#c084fc] mb-4">üìä Performance Comparison</h3>
              <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                <div class="bg-black/40 p-4 rounded-lg text-center">
                  <h4 class="text-[#00fff7] font-bold mb-2">Transaction Speed</h4>
                  <div class="text-2xl font-bold text-white mb-1">~100ms</div>
                  <div class="text-sm text-gray-400">Aleo (Off-chain)</div>
                  <div class="text-xs text-red-400 mt-1">vs 15s Ethereum</div>
                </div>
                <div class="bg-black/40 p-4 rounded-lg text-center">
                  <h4 class="text-[#c084fc] font-bold mb-2">Gas Costs</h4>
                  <div class="text-2xl font-bold text-white mb-1">~$0.001</div>
                  <div class="text-sm text-gray-400">Aleo (Minimal)</div>
                  <div class="text-xs text-red-400 mt-1">vs $5-50 Ethereum</div>
                </div>
                <div class="bg-black/40 p-4 rounded-lg text-center">
                  <h4 class="text-[#00fff7] font-bold mb-2">Privacy Level</h4>
                  <div class="text-2xl font-bold text-white mb-1">100%</div>
                  <div class="text-sm text-gray-400">Aleo (Native)</div>
                  <div class="text-xs text-red-400 mt-1">vs 0% Ethereum</div>
                </div>
              </div>
            </div>
          </div>
        `
      },
      oldstuff2: {
        title: "Interactive Consensus Simulator",
        description: "Experience how Aleo's hybrid consensus works in real-time",
        content: `
          <div class="space-y-6">
            <div class="bg-gradient-to-r from-[#00fff7]/10 to-[#c084fc]/10 p-6 rounded-xl border border-[#00fff7]/20">
              <h3 class="text-2xl font-bold text-[#00fff7] mb-4">üéÆ Consensus Simulator</h3>
              <p class="text-gray-300 mb-4">
                Watch how validators and miners work together to secure the Aleo network. 
                Click the buttons below to trigger different consensus events!
              </p>
            </div>
            
            <div class="bg-black/60 rounded-xl p-8 min-h-[400px]">
              <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div class="space-y-4">
                  <h4 class="text-lg font-bold text-[#c084fc] mb-3">Validators (PoS)</h4>
                  <div class="space-y-2" id="validator-list">
                    <div class="flex items-center justify-between p-3 bg-green-500/20 rounded-lg border border-green-500/30">
                      <span class="text-white">Validator #1</span>
                      <span class="text-green-400 text-sm">Staked: 1000 ALEO</span>
                    </div>
                    <div class="flex items-center justify-between p-3 bg-green-500/20 rounded-lg border border-green-500/30">
                      <span class="text-white">Validator #2</span>
                      <span class="text-green-400 text-sm">Staked: 800 ALEO</span>
                    </div>
                    <div class="flex items-center justify-between p-3 bg-green-500/20 rounded-lg border border-green-500/30">
                      <span class="text-white">Validator #3</span>
                      <span class="text-green-400 text-sm">Staked: 1200 ALEO</span>
                    </div>
                  </div>
                </div>
                
                <div class="space-y-4">
                  <h4 class="text-lg font-bold text-[#00fff7] mb-3">Miners (PoW)</h4>
                  <div class="space-y-2" id="miner-list">
                    <div class="flex items-center justify-between p-3 bg-blue-500/20 rounded-lg border border-blue-500/30">
                      <span class="text-white">Miner #1</span>
                      <span class="text-blue-400 text-sm">Hash: 0x3a7f...</span>
                    </div>
                    <div class="flex items-center justify-between p-3 bg-blue-500/20 rounded-lg border border-blue-500/30">
                      <span class="text-white">Miner #2</span>
                      <span class="text-blue-400 text-sm">Hash: 0x8b2e...</span>
                    </div>
                    <div class="flex items-center justify-between p-3 bg-blue-500/20 rounded-lg border border-blue-500/30">
                      <span class="text-white">Miner #3</span>
                      <span class="text-blue-400 text-sm">Hash: 0x1c9d...</span>
                    </div>
                  </div>
                </div>
              </div>
              
              <div class="mt-6 text-center">
                <div class="bg-gradient-to-r from-[#00fff7]/20 to-[#c084fc]/20 p-4 rounded-lg border border-[#00fff7]/30">
                  <h4 class="text-lg font-bold text-white mb-2">Current Block</h4>
                  <div class="text-sm text-gray-400 font-mono">Block #1,234,567</div>
                  <div class="text-xs text-[#00fff7] mt-1">Last updated: 2 seconds ago</div>
                </div>
              </div>
            </div>
            
            <div class="flex justify-center space-x-4">
              <button class="px-6 py-3 bg-[#00fff7] text-black font-bold rounded-lg hover:bg-[#00fff7]/80 transition-all hover:scale-105">
                üé≤ Simulate Block
              </button>
              <button class="px-6 py-3 bg-[#c084fc] text-white font-bold rounded-lg hover:bg-[#c084fc]/80 transition-all hover:scale-105">
                ‚ö° Add Validator
              </button>
              <button class="px-6 py-3 bg-green-500 text-white font-bold rounded-lg hover:bg-green-500/80 transition-all hover:scale-105">
                ‚õèÔ∏è Mine Puzzle
              </button>
            </div>
          </div>
        `
      },
      
      oldstuff3: {
        title: "Private Transaction Flow",
        description: "Step-by-step simulation of a private transaction",
        content: `
          <div class="space-y-6">
            <div class="bg-gradient-to-r from-[#00fff7]/10 to-[#c084fc]/10 p-6 rounded-xl border border-[#00fff7]/20">
              <h3 class="text-2xl font-bold text-[#00fff7] mb-4">üîê Private Transaction Simulator</h3>
              <p class="text-gray-300 mb-4">
                Follow a private transaction from creation to confirmation. 
                Each step shows what data is visible to whom.
              </p>
            </div>
            
            <div class="space-y-4">
              <div class="flex items-start space-x-4 p-4 bg-gradient-to-r from-green-500/10 to-transparent rounded-lg border border-green-500/20">
                <div class="w-8 h-8 bg-green-500 rounded-full flex items-center justify-center text-black font-bold">1</div>
                <div class="flex-1">
                  <h4 class="text-lg font-bold text-white mb-2">Transaction Creation</h4>
                  <p class="text-gray-400 mb-3">Alice wants to send 5 ALEO to Bob privately</p>
                  <div class="bg-black/40 p-3 rounded border border-green-500/30">
                    <div class="text-sm text-green-400 font-mono">
                      <div>From: alice1...</div>
                      <div>To: bob1...</div>
                      <div>Amount: 5 ALEO</div>
                      <div class="text-red-400">Private Data: üîí ENCRYPTED</div>
                    </div>
                  </div>
                </div>
              </div>
              
              <div class="flex items-start space-x-4 p-4 bg-gradient-to-r from-[#00fff7]/10 to-transparent rounded-lg border border-[#00fff7]/20">
                <div class="w-8 h-8 bg-[#00fff7] rounded-full flex items-center justify-center text-black font-bold">2</div>
                <div class="flex-1">
                  <h4 class="text-lg font-bold text-white mb-2">Proof Generation</h4>
                  <p class="text-gray-400 mb-3">Prover generates zero-knowledge proof</p>
                  <div class="bg-black/40 p-3 rounded border border-[#00fff7]/30">
                    <div class="text-sm text-[#00fff7] font-mono">
                      <div>Proof: 0x7f3a8b2e9c1d...</div>
                      <div>Public Output: ‚úÖ Valid</div>
                      <div>Private Input: üîí Hidden</div>
                    </div>
                  </div>
                </div>
              </div>
              
              <div class="flex items-start space-x-4 p-4 bg-gradient-to-r from-[#c084fc]/10 to-transparent rounded-lg border border-[#c084fc]/20">
                <div class="w-8 h-8 bg-[#c084fc] rounded-full flex items-center justify-center text-black font-bold">3</div>
                <div class="flex-1">
                  <h4 class="text-lg font-bold text-white mb-2">Network Submission</h4>
                  <p class="text-gray-400 mb-3">Only proof and public data sent to network</p>
                  <div class="bg-black/40 p-3 rounded border border-[#c084fc]/30">
                    <div class="text-sm text-[#c084fc] font-mono">
                      <div>Public: ‚úÖ Transaction valid</div>
                      <div>Private: üîí Not transmitted</div>
                      <div>Size: 256 bytes (vs 1KB+ on Ethereum)</div>
                    </div>
                  </div>
                </div>
              </div>
              
              <div class="flex items-start space-x-4 p-4 bg-gradient-to-r from-yellow-500/10 to-transparent rounded-lg border border-yellow-500/20">
                <div class="w-8 h-8 bg-yellow-500 rounded-full flex items-center justify-center text-black font-bold">4</div>
                <div class="flex-1">
                  <h4 class="text-lg font-bold text-white mb-2">Validation</h4>
                  <p class="text-gray-400 mb-3">Validators verify proof without seeing private data</p>
                  <div class="bg-black/40 p-3 rounded border border-yellow-500/30">
                    <div class="text-sm text-yellow-400 font-mono">
                      <div>Proof Verification: ‚úÖ Valid</div>
                      <div>Balance Check: ‚úÖ Sufficient</div>
                      <div>Private Data: üîí Never accessed</div>
                    </div>
                  </div>
                </div>
              </div>
              
              <div class="flex items-start space-x-4 p-4 bg-gradient-to-r from-green-500/10 to-transparent rounded-lg border border-green-500/20">
                <div class="w-8 h-8 bg-green-500 rounded-full flex items-center justify-center text-black font-bold">5</div>
                <div class="flex-1">
                  <h4 class="text-lg font-bold text-white mb-2">Confirmation</h4>
                  <p class="text-gray-400 mb-3">Transaction confirmed and included in block</p>
                  <div class="bg-black/40 p-3 rounded border border-green-500/30">
                    <div class="text-sm text-green-400 font-mono">
                      <div>Block: #1,234,568</div>
                      <div>Status: ‚úÖ Confirmed</div>
                      <div>Privacy: üîí Maintained</div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        `
      },
      
      oldstuff4: {
        title: "Interactive 3D Network Explorer",
        description: "Explore Aleo's architecture in an interactive 3D environment",
        content: `
          <div class="space-y-6">
            <div class="bg-gradient-to-r from-[#00fff7]/10 to-[#c084fc]/10 p-6 rounded-xl border border-[#00fff7]/20">
              <h3 class="text-2xl font-bold text-[#00fff7] mb-4">üåê 3D Network Explorer</h3>
              <p class="text-gray-300 mb-4">
                Navigate through Aleo's network architecture. Click on different nodes to learn about their roles 
                and see real-time data flows between components.
              </p>
            </div>
            
            <div class="bg-black/60 rounded-xl p-8 min-h-[500px] flex items-center justify-center">
              <div class="text-center">
                <div class="w-20 h-20 bg-gradient-to-r from-[#00fff7] to-[#c084fc] rounded-full flex items-center justify-center mx-auto mb-4 animate-pulse">
                  <span class="text-4xl">üåê</span>
                </div>
                <h4 class="text-2xl font-bold text-white mb-2">3D Network Loading...</h4>
                <p class="text-gray-400 mb-4">Interactive 3D model will appear here</p>
                <div class="flex justify-center space-x-2">
                  <div class="w-2 h-2 bg-[#00fff7] rounded-full animate-bounce"></div>
                  <div class="w-2 h-2 bg-[#c084fc] rounded-full animate-bounce" style="animation-delay: 0.1s"></div>
                  <div class="w-2 h-2 bg-[#00fff7] rounded-full animate-bounce" style="animation-delay: 0.2s"></div>
                </div>
              </div>
            </div>
            
            <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
              <div class="bg-black/40 p-4 rounded-lg text-center hover:bg-[#00fff7]/10 transition-colors cursor-pointer">
                <div class="w-6 h-6 bg-[#00fff7] rounded-full mx-auto mb-2"></div>
                <span class="text-sm text-gray-400">Provers</span>
                <div class="text-xs text-[#00fff7] mt-1">Generate ZK Proofs</div>
              </div>
              <div class="bg-black/40 p-4 rounded-lg text-center hover:bg-[#c084fc]/10 transition-colors cursor-pointer">
                <div class="w-6 h-6 bg-[#c084fc] rounded-full mx-auto mb-2"></div>
                <span class="text-sm text-gray-400">Validators</span>
                <div class="text-xs text-[#c084fc] mt-1">Verify & Secure</div>
              </div>
              <div class="bg-black/40 p-4 rounded-lg text-center hover:bg-green-500/10 transition-colors cursor-pointer">
                <div class="w-6 h-6 bg-green-500 rounded-full mx-auto mb-2"></div>
                <span class="text-sm text-gray-400">Clients</span>
                <div class="text-xs text-green-400 mt-1">User Interface</div>
              </div>
              <div class="bg-black/40 p-4 rounded-lg text-center hover:bg-yellow-500/10 transition-colors cursor-pointer">
                <div class="w-6 h-6 bg-yellow-500 rounded-full mx-auto mb-2"></div>
                <span class="text-sm text-gray-400">Records</span>
                <div class="text-xs text-yellow-400 mt-1">Private Data</div>
              </div>
            </div>
          </div>
        `
      },
      
      oldstuff5: {
        title: "Knowledge Challenge: The Ultimate Test",
        description: "Test your understanding with an interactive quiz",
        content: `
          <div class="space-y-6">
            <div class="bg-gradient-to-r from-[#00fff7]/10 to-[#c084fc]/10 p-6 rounded-xl border border-[#00fff7]/20">
              <h3 class="text-2xl font-bold text-[#00fff7] mb-4">üß† Ultimate Aleo Knowledge Challenge</h3>
              <p class="text-gray-300 mb-4">
                Prove your mastery of Aleo's architecture! Answer correctly to unlock the next level. 
                Wrong answers will trigger educational explanations.
              </p>
            </div>
            
            <div class="bg-black/60 rounded-xl p-8 min-h-[400px]">
              <div class="text-center mb-8">
                <div class="text-4xl mb-4">üéØ</div>
                <h4 class="text-2xl font-bold text-white mb-2">Question 1 of 5</h4>
                <div class="w-full bg-gray-700 rounded-full h-2 mb-4">
                  <div class="bg-gradient-to-r from-[#00fff7] to-[#c084fc] h-2 rounded-full" style="width: 20%"></div>
                </div>
              </div>
              
              <div class="space-y-6">
                <div class="bg-gradient-to-r from-[#c084fc]/10 to-[#00fff7]/10 p-6 rounded-xl border border-[#c084fc]/20">
                  <h4 class="text-xl font-bold text-white mb-4">
                    What is the main advantage of Aleo's off-chain execution model compared to Ethereum?
                  </h4>
                  
                  <div class="space-y-3">
                    <button class="w-full p-4 text-left bg-black/40 rounded-lg border border-gray-600 hover:border-[#00fff7] hover:bg-[#00fff7]/10 transition-all">
                      <span class="text-[#00fff7] font-bold mr-3">A)</span>
                      <span class="text-white">Faster transaction processing and lower costs</span>
                    </button>
                    
                    <button class="w-full p-4 text-left bg-black/40 rounded-lg border border-gray-600 hover:border-[#c084fc] hover:bg-[#c084fc]/10 transition-all">
                      <span class="text-[#c084fc] font-bold mr-3">B)</span>
                      <span class="text-white">Better security through proof-of-work</span>
                    </button>
                    
                    <button class="w-full p-4 text-left bg-black/40 rounded-lg border border-gray-600 hover:border-green-500 hover:bg-green-500/10 transition-all">
                      <span class="text-green-500 font-bold mr-3">C)</span>
                      <span class="text-white">More decentralized than other blockchains</span>
                    </button>
                    
                    <button class="w-full p-4 text-left bg-black/40 rounded-lg border border-gray-600 hover:border-yellow-500 hover:bg-yellow-500/10 transition-all">
                      <span class="text-yellow-500 font-bold mr-3">D)</span>
                      <span class="text-white">Uses less energy than Bitcoin</span>
                    </button>
                  </div>
                </div>
                
                <div class="flex justify-between items-center">
                  <div class="text-sm text-gray-400">
                    Score: <span class="text-[#00fff7] font-bold">0/5</span>
                  </div>
                  <div class="text-sm text-gray-400">
                    Streak: <span class="text-[#c084fc] font-bold">0</span>
                  </div>
                </div>
              </div>
            </div>
            
            <div class="text-center">
              <button class="px-8 py-3 bg-gradient-to-r from-[#00fff7] to-[#c084fc] text-white font-bold rounded-lg hover:scale-105 transition-all">
                üöÄ Start Challenge
              </button>
            </div>
          </div>
        `
      }
    },
    
    theValidator: {
      back: "‚Üê BACK TO MISSIONS",
      backButton: "‚Üê BACK",
      progress: "Progress",
      title: "The Validator",
      subtitle: "Test your ZK knowledge",
      advanced: "FINAL",
      reward: "zk Badge: Validator",
      questionOf: "Question {current} of {total}",
      nextQuestion: "NEXT QUESTION",
      showResults: "SHOW RESULTS",
      yourScore: "Your Score:",
      passed: "‚úì Passed! You've mastered Aleo!",
      failed: "Try again to improve your score.",
      completeMission: "COMPLETE MISSION ‚úì",
      restart: "RESTART QUIZ",
      helpTextStart: "Answer all questions to complete the test",
      helpTextRemaining: "Remaining: {count}",
      passedMessage: "You've proven your knowledge!",
      failedMessage: "Study the material and try again",
      correct: "Correct!",
      yourAnswer: "Your answer:",
      correctAnswer: "Correct:",
      badgeReceived: "You received: zk Badge: Validator",
      congratsMessage: "Congratulations! You've completed all ZK Odyssey missions.",
      returningToMissions: "Returning to missions...",
      returnButton: "‚Üê RETURN",
      correctAnswers: "correct answers",
      questions: [
        {
          question: "What is Zero Knowledge Proof?",
          options: [
            "A method for data encryption",
            "A protocol for proving truth without revealing information",
            "A signature verification method",
            "A hashing algorithm"
          ],
          explanation: "ZK-proof allows proving the truth of a statement without revealing additional information."
        },
        {
          question: "What language are Aleo programs written in?",
          options: [
            "Solidity",
            "Rust",
            "Leo",
            "Move"
          ],
          explanation: "Leo is a special functional language for creating private applications on Aleo."
        },
        {
          question: "What is a record in Leo?",
          options: [
            "Transaction log",
            "Data type for private state",
            "Function for writing to blockchain",
            "Logging structure"
          ],
          explanation: "Record is a private data type that stores encrypted application state."
        },
        {
          question: "Where are Aleo programs executed?",
          options: [
            "In the user's browser",
            "On blockchain validators",
            "Off-chain with proof generation",
            "In Ethereum smart contracts"
          ],
          explanation: "Programs execute off-chain, while only ZK-proofs are validated on-chain."
        },
        {
          question: "What does the Prover do in a ZK system?",
          options: [
            "Verifies proofs",
            "Generates proofs based on private data",
            "Mines blocks",
            "Stores blockchain state"
          ],
          explanation: "The Prover creates ZK-proof using private input data."
        },
        {
          question: "Which command is used to deploy a program?",
          options: [
            "leo run",
            "leo build",
            "leo deploy",
            "leo execute"
          ],
          explanation: "The 'leo deploy' command is used to deploy a program to the Aleo network."
        },
        {
          question: "What does 'transition' mean in Leo?",
          options: [
            "State transition",
            "Public program function",
            "Private variable",
            "Library import"
          ],
          explanation: "Transition is a public function that can change program state."
        },
        {
          question: "What is the main advantage of Aleo?",
          options: [
            "High transaction speed",
            "Complete privacy of computations and data",
            "Low fees",
            "Ethereum compatibility"
          ],
          explanation: "Aleo provides complete privacy through ZK-proofs, hiding logic and data."
        },
        {
          question: "What is a circuit in the ZK context?",
          options: [
            "Electronic circuit",
            "Mathematical representation of computation",
            "Consensus algorithm",
            "Communication protocol"
          ],
          explanation: "Circuit is a mathematical scheme representing computation for ZK-proof."
        },
        {
          question: "What data type is used for unsigned integers in Leo?",
          options: [
            "int",
            "number",
            "u32, u64, u128",
            "integer"
          ],
          explanation: "Leo uses u8, u16, u32, u64, u128 types for unsigned integers."
        }
      ]
    }
  },

  ru: {
    // Hero Section
    hero: {
      title: "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Aleo Network",
      subtitle: "–í–æ–π–¥–∏—Ç–µ –≤ –º–∏—Ä Zero-Knowledge",
      prompt: "–ü–æ–¥—Å–∫–∞–∑–∫–∞: –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É",
      placeholder: "–≤–≤–µ–¥–∏ 'connect' —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å",
      connectError: "–ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞. –í–≤–µ–¥–∏—Ç–µ \"connect\" —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ.",
      connecting: [
        "–ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ü–†–û–¢–û–ö–û–õ–ê –í–ó–õ–û–ú–ê...",
        "–°–ö–ê–ù–ò–†–û–í–ê–ù–ò–ï –£–ó–õ–û–í –°–ï–¢–ò...",
        "[‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà] 100% –§–ê–ô–†–í–û–õ –û–ë–û–ô–î–ï–ù",
        "–ò–ù–™–ï–ö–¶–ò–Ø ZK-PROOF PAYLOAD...",
        "–†–ê–°–®–ò–§–†–û–í–ö–ê –ö–í–ê–ù–¢–û–í–´–• –ü–û–î–ü–ò–°–ï–ô...",
        "0x7F3A...B92E > –î–û–°–¢–£–ü_–†–ê–ó–†–ï–®–ï–ù",
        "–£–°–¢–ê–ù–û–í–ö–ê –ó–ê–©–ò–©–ï–ù–ù–û–ì–û –ö–ê–ù–ê–õ–ê...",
        "–°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –°–û–°–¢–û–Ø–ù–ò–Ø –ë–õ–û–ö–ß–ï–ô–ù–ê...",
        "‚ö° –ù–ï–ô–†–û–ù–ù–ê–Ø –°–í–Ø–ó–¨ –£–°–¢–ê–ù–û–í–õ–ï–ù–ê ‚ö°",
        "‚úì –î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω. –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, Prover #001."
      ]
    },

    // Missions List
    missions: {
      title: "ZK –û–î–ò–°–°–ï–Ø",
      subtitle: "–î–æ–∫–∞–∂–∏ —Ç–æ, —á—Ç–æ –∏–∑—É—á–∏–ª. –û—Ç–∫—Ä–æ–π —Å–∫—Ä—ã—Ç—É—é —Å–µ—Ç—å.",
      statusPanel: {
        prover: "Prover #001",
        level: "–£—Ä–æ–≤–µ–Ω—å",
        knowledge: "–ó–Ω–∞–Ω–∏—è",
        proofs: "–î–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞"
      },
      locked: "üîí –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù–û",
      completed: "‚úì –ó–ê–í–ï–†–®–ï–ù–û",
      startMission: "–ù–ê–ß–ê–¢–¨ –ú–ò–°–°–ò–Æ",
      viewBadge: "üèÜ –ü–û–°–ú–û–¢–†–ï–¢–¨ –ë–ï–ô–î–ñ VALIDATOR",
      bonusSection: "‚ö° –ë–û–ù–£–°–ù–ê–Ø –ú–ò–°–°–ò–Ø",
      playNow: "–ò–ì–†–ê–¢–¨",
      goal: "–¶–µ–ª—å",
      reward: "–ù–∞–≥—Ä–∞–¥–∞"
    },

    // Mission Names and Goals
    missionsList: {
      genesis: {
        name: "–ì–µ–Ω–µ–∑–∏—Å",
        goal: "–ü–æ–Ω—è—Ç—å, —á—Ç–æ —Ç–∞–∫–æ–µ ZK",
        reward: "–î–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ –∑–Ω–∞–Ω–∏—è #1",
        description: "–ò–∑—É—á–∏—Ç–µ –æ—Å–Ω–æ–≤—ã –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤ —Å –Ω—É–ª–µ–≤—ã–º —Ä–∞–∑–≥–ª–∞—à–µ–Ω–∏–µ–º –∏ –ø–æ–π–º–∏—Ç–µ, –∫–∞–∫ Aleo —Å–æ–∑–¥–∞–µ—Ç –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ –±–ª–æ–∫—á–µ–π–Ω–µ. –û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è —Ä–µ–∞–ª—å–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏ —Å–∏–ª—É —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏."
      },
      language: {
        name: "–Ø–∑—ã–∫",
        goal: "–ò–∑—É—á–∏—Ç—å –æ—Å–Ω–æ–≤—ã Leo",
        reward: "–î–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞ #2",
        description: "–û—Å–≤–æ–π—Ç–µ —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è Leo - —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏ —Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —è–∑—ã–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π. –ò–∑—É—á–∏—Ç–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å, —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –∏ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ—é –ø–µ—Ä–≤—É—é ZK-–ø—Ä–æ–≥—Ä–∞–º–º—É."
      },
      circuit: {
        name: "–°—Ö–µ–º–∞",
        goal: "–°–æ–∑–¥–∞—Ç—å —Å–≤–æ–π –ø–µ—Ä–≤—ã–π circuit",
        reward: "–î–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ —Å–±–æ—Ä–∫–∏ #3",
        description: "–°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ—é –ø–µ—Ä–≤—É—é zero-knowledge —Å—Ö–µ–º—É –∏ –ø–æ–π–º–∏—Ç–µ, –∫–∞–∫ –∫–æ–¥ Leo –∫–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç—Å—è –≤ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞. –£–∑–Ω–∞–π—Ç–µ –æ records, –ø—Ä–∏–≤–∞—Ç–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∏ –º–æ–¥–µ–ª–∏ Prover-Verifier."
      },
      network: {
        name: "–°–µ—Ç—å",
        goal: "–ó–∞–ø—É—Å—Ç–∏—Ç—å dApp –Ω–∞ Aleo",
        reward: "–î–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ –¥–µ–ø–ª–æ—è #4",
        description: "–ó–∞–¥–µ–ø–ª–æ–π—Ç–µ —Å–≤–æ–µ –ø–µ—Ä–≤–æ–µ –¥–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ —Å–µ—Ç—å Aleo. –ò–∑—É—á–∏—Ç–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É —Å–µ—Ç–∏, –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ off-chain, –≤–∞–ª–∏–¥–∞—Ü–∏—é on-chain –∏ –ø—Ä–æ—Ü–µ—Å—Å –¥–µ–ø–ª–æ—è."
      },
      validator: {
        name: "–í–∞–ª–∏–¥–∞—Ç–æ—Ä",
        goal: "–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–Ω–∞–Ω–∏–π",
        reward: "zk –ë–µ–π–¥–∂: –í–∞–ª–∏–¥–∞—Ç–æ—Ä",
        description: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è –æ zero-knowledge –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞—Ö, —è–∑—ã–∫–µ Leo, —Å—Ö–µ–º–∞—Ö –∏ —Å–µ—Ç–∏ Aleo. –°–¥–∞–π—Ç–µ —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —ç–∫–∑–∞–º–µ–Ω, —á—Ç–æ–±—ã –¥–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ –≤—ã –æ—Å–≤–æ–∏–ª–∏ –æ—Å–Ω–æ–≤—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –±–ª–æ–∫—á–µ–π–Ω–∞."
      },
      builder: {
        name: "–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å—Ö–µ–º",
        goal: "–ü–æ—Å—Ç—Ä–æ–π ZK-—Å—Ö–µ–º—ã",
        reward: "–ë–æ–Ω—É—Å: –ë–µ–π–¥–∂ —Å—Ç—Ä–æ–∏—Ç–µ–ª—è",
        description: "–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –±–æ–Ω—É—Å–Ω–∞—è –∏–≥—Ä–∞, –≥–¥–µ –≤—ã —Å–æ–∑–¥–∞–µ—Ç–µ –∏ —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç–µ ZK-—Å—Ö–µ–º—ã –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏. –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –¥–∏–∑–∞–π–Ω–∞–º–∏ —Å—Ö–µ–º –∏ —Å–º–æ—Ç—Ä–∏—Ç–µ, –∫–∞–∫ –æ–Ω–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞."
      },
      ledger: {
        name: "–ê–∫—Ç VI ‚Äî –†–µ–µ—Å—Ç—Ä",
        goal: "–í–Ω—É—Ç—Ä–µ–Ω–Ω–æ—Å—Ç–∏ Aleo Blockchain",
        reward: "–ó–Ω–∞—á–æ–∫ –ú–∞—Å—Ç–µ—Ä–∞ –†–µ–µ—Å—Ç—Ä–∞",
        description: "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –º–∏—Å—Å–∏—è, –∏—Å—Å–ª–µ–¥—É—é—â–∞—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –±–ª–æ–∫—á–µ–π–Ω–∞: mempool, —Å—Ç—Ä—É–∫—Ç—É—Ä—É –±–ª–æ–∫–æ–≤, state commitment –∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –±–ª–æ–∫–æ–≤. –û—Å–≤–æ–π—Ç–µ –º–µ—Ö–∞–Ω–∏–∫—É —Ä–µ–µ—Å—Ç—Ä–∞."
      }
    },

    // Circuit Builder
    circuitBuilder: {
      title: "–ö–û–ù–°–¢–†–£–ö–¢–û–† –°–•–ï–ú",
      back: "–ù–ê–ó–ê–î",
      bonus: "–ë–û–ù–£–°",
      task: "–ó–ê–î–ê–ù–ò–ï",
      hint: "–ü–û–î–°–ö–ê–ó–ö–ê",
      show: "–ü–æ–∫–∞–∑–∞—Ç—å",
      hide: "–°–∫—Ä—ã—Ç—å",
      components: "–ö–û–ú–ü–û–ù–ï–ù–¢–´",
      run: "‚ñ∂ –ó–ê–ü–£–°–¢–ò–¢–¨",
      running: "‚ö° –°–ò–ú–£–õ–Ø–¶–ò–Ø...",
      clear: "üóëÔ∏è –û–ß–ò–°–¢–ò–¢–¨",
      testCases: "–¢–ï–°–¢-–ö–ï–ô–°–´",
      test: "–¢–µ—Å—Ç",
      pass: "PASS",
      fail: "FAIL",
      expected: "–û–∂–∏–¥–∞–ª–æ—Å—å",
      got: "–ü–æ–ª—É—á–µ–Ω–æ",
      runSimulation: "–ó–∞–ø—É—Å—Ç–∏ —Å–∏–º—É–ª—è—Ü–∏—é",
      toCheck: "–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ö–µ–º—ã",
      levelComplete: "–£–†–û–í–ï–ù–¨ –ü–†–û–ô–î–ï–ù!",
      nextLevel: "–°–õ–ï–î–£–Æ–©–ò–ô –£–†–û–í–ï–ù–¨ ‚Üí",
      allComplete: "üèÜ –í–°–ï –£–†–û–í–ù–ò –ü–†–û–ô–î–ï–ù–´!",
      stats: "–°–¢–ê–¢–ò–°–¢–ò–ö–ê",
      componentsCount: "–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã",
      connections: "–°–æ–µ–¥–∏–Ω–µ–Ω–∏—è",
      level: "–£—Ä–æ–≤–µ–Ω—å",
      legend: "–õ–ï–ì–ï–ù–î–ê",
      output: "–í—ã—Ö–æ–¥ (output)",
      input: "–í—Ö–æ–¥ (input)",
      connection: "–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ",
      instructions: {
        drag: "–ü–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–π",
        connect: "–°–æ–µ–¥–∏–Ω—è–π —Ç–æ—á–∫–∏",
        delete: "–£–¥–∞–ª—è–π"
      },
      levels: {
        equality: {
          name: "–ü—Ä–æ—Å—Ç–æ–µ —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ",
          description: "–°–æ–∑–¥–∞–π circuit –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ a == b",
          hint: "–ò—Å–ø–æ–ª—å–∑—É–π XOR –∏ NOT gates. –ï—Å–ª–∏ a XOR b = 0, –∑–Ω–∞—á–∏—Ç –æ–Ω–∏ —Ä–∞–≤–Ω—ã"
        },
        range: {
          name: "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–∞",
          description: "–ü—Ä–æ–≤–µ—Ä—å, —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ [01, 11]",
          hint: "–ò—Å–ø–æ–ª—å–∑—É–π AND –∏ OR –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∏—Ç–æ–≤"
        },
        comparison: {
          name: "–ü—Ä–∏–≤–∞—Ç–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ",
          description: "a > b –±–µ–∑ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è –∑–Ω–∞—á–µ–Ω–∏–π",
          hint: "–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–±–∏–Ω–∞—Ü–∏—é AND, NOT –¥–ª—è –ø–æ–±–∏—Ç–æ–≤–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è"
        }
      },
      gates: {
        and: "–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –ò",
        or: "–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –ò–õ–ò",
        not: "–∏–Ω–≤–µ—Ä—Å–∏—è",
        xor: "–∏—Å–∫–ª—é—á–∞—é—â–µ–µ –ò–õ–ò"
      }
    },

    // Zero Room
    zeroRoom: {
      entering: "–í–•–û–î –í ZERO ROOM",
      initializing: "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–≤–∞–Ω—Ç–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞...",
      generating: "–ì–ï–ù–ï–†–ê–¶–ò–Ø ZK-–ë–ï–ô–î–ñ–ê",
      scanning: "–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞",
      verifying: "–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤",
      building: "–ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ Merkle Tree",
      signature: "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–π –ø–æ–¥–ø–∏—Å–∏",
      compiling: "–ö–æ–º–ø–∏–ª—è—Ü–∏—è ZK-–ë–ï–ô–î–ñ–ê...",
      badge: "ZK-–ë–ï–ô–î–ñ v1.0",
      validator: "–í–ê–õ–ò–î–ê–¢–û–†",
      zkMaster: "ZK –ú–ê–°–¢–ï–†",
      missions: "–ú–∏—Å—Å–∏–π",
      level: "–£—Ä–æ–≤–µ–Ω—å",
      expert: "–≠–ö–°–ü–ï–†–¢",
      zkScore: "ZK –°—á–µ—Ç",
      uniqueId: "–£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID",
      backToMissions: "–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –º–∏—Å—Å–∏—è–º",
      shareBadge: "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –±–µ–π–¥–∂–µ–º",
      badgeCopied: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–µ–π–¥–∂–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞!",
      achievements: "–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è",
      zkKnowledge: "üéì ZK –ó–Ω–∞–Ω–∏—è - –û—Å–≤–æ–µ–Ω",
      leoMaster: "‚ö° Leo –ú–∞—Å—Ç–µ—Ä - –û—Å–≤–æ–µ–Ω",
      networkPro: "üöÄ Network –ü—Ä–æ - –û—Å–≤–æ–µ–Ω",
      congratulations: "–ü–û–ó–î–†–ê–í–õ–Ø–ï–ú!",
      successMessage: "–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∏ –≤—Å–µ –º–∏—Å—Å–∏–∏ Aleo Odyssey",
      expertMessage: "–¢–µ–ø–µ—Ä—å –≤—ã ‚Äî —Å–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —ç–∫—Å–ø–µ—Ä—Ç –ø–æ Zero Knowledge Proof"
    },

    // Wallet Connection
    wallet: {
      connect: "–ü–æ–¥–∫–ª—é—á–∏—Ç—å –∫–æ—à–µ–ª–µ–∫",
      chooseWallet: "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ—à–µ–ª–µ–∫ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Aleo Odyssey",
      leoWallet: "Leo Wallet",
      puzzleWallet: "Puzzle Wallet",
      available: "–î–æ—Å—Ç—É–ø–µ–Ω",
      notInstalled: "–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω",
      connecting: "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...",
      disconnect: "–û—Ç–∫–ª—é—á–∏—Ç—å",
      installExtension: "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è",
      refreshPage: "üí° –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è",
      debugConsole: "üîç –í—ã–∑–æ–≤–∏—Ç–µ window.debugAleoWallets() –≤ –∫–æ–Ω—Å–æ–ª–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏",
      close: "–ó–∞–∫—Ä—ã—Ç—å",
      refreshStatus: "–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ—à–µ–ª—å–∫–æ–≤",
      errors: {
        leoNotFound: "Leo Wallet –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ Leo Wallet.",
        leoNotSupported: "Leo Wallet –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ",
        puzzleNotFound: "Puzzle Wallet –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ Puzzle Wallet.",
        unknownWallet: "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –∫–æ—à–µ–ª—å–∫–∞",
        connectionFailed: "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞–¥—Ä–µ—Å –æ—Ç –∫–æ—à–µ–ª—å–∫–∞",
        notConnected: "–ö–æ—à–µ–ª–µ–∫ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω"
      },
      status: {
        available: "–î–æ—Å—Ç—É–ø–µ–Ω",
        notInBrowser: "–ù–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ",
        leoNotFound: "Leo Wallet –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ window.leo",
        leoNoRequest: "Leo Wallet –Ω–µ –∏–º–µ–µ—Ç –º–µ—Ç–æ–¥–∞ request",
        puzzleAvailable: "–î–æ—Å—Ç—É–ø–µ–Ω (window.puzzle)",
        puzzleSdk: "–î–æ—Å—Ç—É–ø–µ–Ω (Puzzle SDK)",
        puzzleUnavailable: "Puzzle Wallet –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
      }
    },

    // Common
    common: {
      back: "‚Üê –ù–ê–ó–ê–î",
      next: "–î–ê–õ–ï–ï ‚Üí",
      complete: "–ó–ê–í–ï–†–®–ò–¢–¨",
      submit: "–û–¢–ü–†–ê–í–ò–¢–¨",
      check: "–ü–†–û–í–ï–†–ò–¢–¨",
      restart: "–ù–ê–ß–ê–¢–¨ –ó–ê–ù–û–í–û",
      continue: "–ü–†–û–î–û–õ–ñ–ò–¢–¨"
    },

    // Individual Missions Content
    theGenesis: {
      back: "‚Üê –ù–ê–ó–ê–î –ö –ú–ò–°–°–ò–Ø–ú",
      progress: "–ü—Ä–æ–≥—Ä–µ—Å—Å",
      steps: "–®–∞–≥–æ–≤",
      title: "The Genesis",
      subtitle: "–ü–æ–Ω—è—Ç—å, —á—Ç–æ —Ç–∞–∫–æ–µ ZK",
      beginner: "–ù–ê–ß–ê–õ–¨–ù–´–ô",
      reward: "Proof of Knowledge #1",
      step1: {
        title: "–ß—Ç–æ —Ç–∞–∫–æ–µ Zero Knowledge Proof?",
        description: "Zero Knowledge Proof (ZK-–¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ) ‚Äî —ç—Ç–æ –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –ø—Ä–æ—Ç–æ–∫–æ–ª, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–¥–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω–µ (prover) –¥–æ–∫–∞–∑–∞—Ç—å –¥—Ä—É–≥–æ–π —Å—Ç–æ—Ä–æ–Ω–µ (verifier), —á—Ç–æ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏—Å—Ç–∏–Ω–Ω–æ, –Ω–µ —Ä–∞—Å–∫—Ä—ã–≤–∞—è –Ω–∏–∫–∞–∫–æ–π –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –∫—Ä–æ–º–µ —Å–∞–º–æ–≥–æ —Ñ–∞–∫—Ç–∞ –∏—Å—Ç–∏–Ω–Ω–æ—Å—Ç–∏.",
        example: "üí° –ü—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–º–µ—Ä:",
        exampleText: "–ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ: –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ –∑–Ω–∞–µ—Ç–µ –ø–∞—Ä–æ–ª—å –æ—Ç —Å–µ–π—Ñ–∞, –Ω–µ –≥–æ–≤–æ—Ä—è —Å–∞–º –ø–∞—Ä–æ–ª—å. ZK-–ø—Ä–æ—Ç–æ–∫–æ–ª –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–∞–º —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å ‚Äî –æ—Ç–∫—Ä—ã—Ç—å —Å–µ–π—Ñ, –Ω–µ —Ä–∞—Å–∫—Ä—ã–≤–∞—è –∫–æ–º–±–∏–Ω–∞—Ü–∏—é.",
        button: "–ü–û–ù–Ø–¢–ù–û, –ü–†–û–î–û–õ–ñ–ò–¢–¨ ‚Üí"
      },
      step2new: {
        title: "ZK –≤ —Ä–µ–∞–ª—å–Ω–æ–π –∂–∏–∑–Ω–∏",
        description: "Zero Knowledge –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ —Ä–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö –∏ —Ä–µ—à–∞—é—Ç –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏. –†–∞—Å—Å–º–æ—Ç—Ä–∏–º –ø—Ä–∏–º–µ—Ä—ã:",
        useCase1Title: "–ü—Ä–∏–≤–∞—Ç–Ω—ã–π –±–∞–Ω–∫–∏–Ω–≥",
        useCase1Text: "–î–æ–∫–∞–∂–∏—Ç–µ, —á—Ç–æ —É –≤–∞—Å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –∫—Ä–µ–¥–∏—Ç–∞, –Ω–µ —Ä–∞—Å–∫—Ä—ã–≤–∞—è —Ç–æ—á–Ω—ã–π –±–∞–ª–∞–Ω—Å. –ë–∞–Ω–∫–∏ –º–æ–≥—É—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–ª–∞—Ç–µ–∂–µ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –±–µ–∑ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –∏—Å—Ç–æ—Ä–∏–∏.",
        useCase2Title: "–ê–Ω–æ–Ω–∏–º–Ω–æ–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ",
        useCase2Text: "–î–æ–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –≤—ã –∏–º–µ–µ—Ç–µ –ø—Ä–∞–≤–æ –≥–æ–ª–æ—Å–æ–≤–∞—Ç—å –∏ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏, –Ω–µ —Ä–∞—Å–∫—Ä—ã–≤–∞—è –∑–∞ –∫–æ–≥–æ. –ü–æ–ª–Ω–∞—è –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –ø—Ä–æ–≤–µ—Ä–∫–∏.",
        useCase3Title: "–ß–µ—Å—Ç–Ω—ã–µ –∏–≥—Ä—ã",
        useCase3Text: "–î–æ–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –≤–∞—à —Ö–æ–¥ –≤–∞–ª–∏–¥–µ–Ω –≤ –∏–≥—Ä–µ, –Ω–µ —Ä–∞—Å–∫—Ä—ã–≤–∞—è —Å–≤–æ—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é. –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç —á–∏—Ç–µ—Ä—Å—Ç–≤–æ, —Å–æ—Ö—Ä–∞–Ω—è—è –∏–Ω—Ç—Ä–∏–≥—É –∏–≥—Ä—ã.",
        button: "–£–í–õ–ï–ö–ê–¢–ï–õ–¨–ù–û! ‚Üí"
      },
      step3new: {
        title: "–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞ ZK",
        description: "ZK-–¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –æ—Å–Ω–æ–≤–∞–Ω—ã –Ω–∞ —Å–ª–æ–∂–Ω–æ–π –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–π –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ. –†–∞–∑–±–µ—Ä–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –±–µ–∑ –ø–æ–≥—Ä—É–∂–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º—É–ª—ã:",
        componentsTitle: "üîê –¢—Ä–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞:",
        component1: "Witness (–°–≤–∏–¥–µ—Ç–µ–ª—å)",
        component1Text: "–≤–∞—à–∏ —Å–µ–∫—Ä–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–ø–∞—Ä–æ–ª—å, –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á, –±–∞–ª–∞–Ω—Å)",
        component2: "Statement (–£—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ)",
        component2Text: "—á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–∫–∞–∑–∞—Ç—å (\"–Ø –∑–Ω–∞—é –ø–∞—Ä–æ–ª—å\")",
        component3: "Proof (–î–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ)",
        component3Text: "–º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ, –Ω–µ —Ä–∞—Å–∫—Ä—ã–≤–∞—é—â–µ–µ —Å–µ–∫—Ä–µ—Ç",
        protocolTitle: "‚ö° –ü—Ä–æ—Ç–æ–∫–æ–ª zkSNARK",
        protocolText: "Aleo –∏—Å–ø–æ–ª—å–∑—É–µ—Ç zkSNARK (Zero-Knowledge Succinct Non-Interactive Argument of Knowledge) - –ø—Ä–æ—Ç–æ–∫–æ–ª, –ø–æ–∑–≤–æ–ª—è—é—â–∏–π —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–æ–º–ø–∞–∫—Ç–Ω—ã–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ –±—ã—Å—Ç—Ä–æ –ø—Ä–æ–≤–µ—Ä—è—é—Ç—Å—è.",
        button: "–ü–û–ù–Ø–õ ‚Üí"
      },
      step2: {
        title: "–ó–∞—á–µ–º –Ω—É–∂–µ–Ω Aleo?",
        description: "Aleo ‚Äî —ç—Ç–æ –±–ª–æ–∫—á–µ–π–Ω-–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞, –∫–æ—Ç–æ—Ä–∞—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç Zero Knowledge —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º—ã—Ö –¥–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π.",
        privacy: "üîí –ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å",
        privacyText: "–í—Å–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç –ø—Ä–∏–≤–∞—Ç–Ω–æ. –ù–∏–∫—Ç–æ –Ω–µ –≤–∏–¥–∏—Ç –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ.",
        speed: "‚ö° –°–∫–æ—Ä–æ—Å—Ç—å",
        speedText: "ZK-–¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –ø–æ–∑–≤–æ–ª—è—é—Ç –±—ã—Å—Ç—Ä–æ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.",
        button: "–ü–û–ù–Ø–¢–ù–û ‚Üí"
      },
      step3: {
        title: "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –º–∏—Ä–µ",
        description: "ZK-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –æ—Ç–∫—Ä—ã–≤–∞—é—Ç –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π:",
        defi: "üí∞ DeFi —Å –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å—é",
        defiText: "–¢–æ—Ä–≥–æ–≤–ª—è –±–µ–∑ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è –±–∞–ª–∞–Ω—Å–æ–≤ –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π",
        games: "üéÆ –ò–≥—Ä—ã",
        gamesText: "–ü—Ä–∏–≤–∞—Ç–Ω—ã–µ —Ö–æ–¥—ã, —á–µ—Å—Ç–Ω–∞—è –º–µ—Ö–∞–Ω–∏–∫–∞ –±–µ–∑ —á–∏—Ç–µ—Ä–æ–≤",
        medicine: "üè• –ú–µ–¥–∏—Ü–∏–Ω–∞",
        medicineText: "–û–±–º–µ–Ω –¥–∞–Ω–Ω—ã–º–∏ –±–µ–∑ –Ω–∞—Ä—É—à–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏",
        button: "–ó–ê–í–ï–†–®–ò–¢–¨ –ú–ò–°–°–ò–Æ ‚úì"
      }
    },
    
    theLanguage: {
      back: "‚Üê –ù–ê–ó–ê–î –ö –ú–ò–°–°–ò–Ø–ú",
      progress: "–ü—Ä–æ–≥—Ä–µ—Å—Å",
      steps: "–®–∞–≥–æ–≤",
      title: "The Language",
      subtitle: "–ò–∑—É—á–∏—Ç—å –æ—Å–Ω–æ–≤—ã —è–∑—ã–∫–∞ Leo",
      intermediate: "–°–†–ï–î–ù–ò–ô",
      reward: "Proof of Mastery #2",
      step1: {
        title: "–ß—Ç–æ —Ç–∞–∫–æ–µ Leo?",
        description: "Leo ‚Äî —ç—Ç–æ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏ —Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –Ω–∞–ø–∏—Å–∞–Ω–∏—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –Ω–∞ –±–ª–æ–∫—á–µ–π–Ω–µ Aleo. –°–∏–Ω—Ç–∞–∫—Å–∏—Å Leo –ø–æ—Ö–æ–∂ –Ω–∞ Rust, –Ω–æ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è zero-knowledge circuits.",
        safety: "‚ö° –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å",
        safetyText: "–°—Ç—Ä–æ–≥–∞—è —Ç–∏–ø–∏–∑–∞—Ü–∏—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –æ—à–∏–±–∫–∏ –Ω–∞ —ç—Ç–∞–ø–µ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏",
        privacy: "üîí –ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å",
        privacyText: "–í–µ—Å—å –∫–æ–¥ –∫–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç—Å—è –≤ ZK-–¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏",
        button: "–ò–ù–¢–ï–†–ï–°–ù–û, –ü–û–ö–ê–ñ–ò–¢–ï –°–ò–ù–¢–ê–ö–°–ò–° ‚Üí"
      },
      step2: {
        title: "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã Leo",
        description: "–ö–∞–∂–¥–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ Leo –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏–∏-–ø–µ—Ä–µ—Ö–æ–¥—ã (transitions), –∫–æ—Ç–æ—Ä—ã–µ –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç –ª–æ–≥–∏–∫—É –≤–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.",
        codeTitle: "üìù –ë–ê–ó–û–í–ê–Ø –°–¢–†–£–ö–¢–£–†–ê",
        codeFile: "hello.aleo",
        note1: "–û–±—ä—è–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –∏–º–µ–Ω–µ–º",
        note2: "–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è",
        note3: "–ü–∞—Ä–∞–º–µ—Ç—Ä —Å —Ç–∏–ø–æ–º (u32 = unsigned 32-bit integer)",
        button: "–ü–û–ù–Ø–¢–ù–û ‚Üí"
      },
      step3: {
        title: "–¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –≤ Leo",
        description: "Leo –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —á–∏—Å–ª–∞–º–∏, –±—É–ª–µ–≤—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏, –∞–¥—Ä–µ—Å–∞–º–∏ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö.",
        numeric: "–ß–∏—Å–ª–æ–≤—ã–µ —Ç–∏–ø—ã",
        numericU: "‚Ä¢ u8, u16, u32, u64, u128 - unsigned",
        numericI: "‚Ä¢ i8, i16, i32, i64, i128 - signed",
        numericField: "‚Ä¢ field - –±–æ–ª—å—à–∏–µ —á–∏—Å–ª–∞",
        other: "–î—Ä—É–≥–∏–µ —Ç–∏–ø—ã",
        otherBool: "‚Ä¢ bool - true/false",
        otherAddress: "‚Ä¢ address - Aleo –∞–¥—Ä–µ—Å–∞",
        otherStruct: "‚Ä¢ struct - –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã",
        codeTitle: "üí° –ü–†–ò–ú–ï–† –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø",
        codeFile: "calculate.leo",
        button: "–ü–û–ù–Ø–õ, –î–ê–í–ê–ô–¢–ï –ü–†–ê–ö–¢–ò–ö–£ ‚Üí"
      },
      step4: {
        title: "Records –∏ Structs",
        description: "–í Leo –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö —Å –ø–æ–º–æ—â—å—é struct –∏ record. Record ‚Äî —ç—Ç–æ –æ—Å–æ–±—ã–π —Ç–∏–ø, –∫–æ—Ç–æ—Ä—ã–π —Ö—Ä–∞–Ω–∏—Ç –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ on-chain.",
        codeTitle: "üìù –°–¢–†–£–ö–¢–£–†–ê –¢–û–ö–ï–ù–ê",
        codeFile: "token.leo",
        recordTitle: "üîí –ß—Ç–æ —Ç–∞–∫–æ–µ record?",
        recordText: "Record ‚Äî —ç—Ç–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –≤ Leo, –∫–æ—Ç–æ—Ä–∞—è —Ö—Ä–∞–Ω–∏—Ç –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ on-chain. –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü record –º–æ–∂–µ—Ç –∏—Ö —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å.",
        recordNote: "–ø—Ä–∏–≤–∞—Ç–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –±–ª–æ–∫—á–µ–π–Ω–µ",
        button: "–ü–û–ù–Ø–¢–ù–û ‚Üí"
      },
      step5: {
        title: "–ú–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –≤–∏–¥–∏–º–æ—Å—Ç–∏",
        description: "–í Leo –µ—Å—Ç—å —Ç—Ä–∏ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ –≤–∏–¥–∏–º–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—ã–µ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É—é—Ç, –∫–∞–∫ –¥–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –∏ —Ö—Ä–∞–Ω—è—Ç—Å—è: public, private –∏ constant.",
        publicTitle: "public",
        publicText: "–î–∞–Ω–Ω—ã–µ –≤–∏–¥–Ω—ã –≤—Å–µ–º –≤ –±–ª–æ–∫—á–µ–π–Ω–µ. –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –ø—Ä–æ–∑—Ä–∞—á–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è.",
        privateTitle: "private",
        privateText: "–ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –≤–∏–¥–∏–º—ã–µ —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü—É. –û—Å–Ω–æ–≤–∞ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏ Aleo.",
        constantTitle: "constant",
        constantText: "–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –≤—Ä–µ–º–µ–Ω–∏ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤—Å—Ç—Ä–∞–∏–≤–∞—é—Ç—Å—è –≤ —Å—Ö–µ–º—É.",
        codeTitle: "üí° –ü–†–ò–ú–ï–† –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø:",
        button: "–ü–û–ù–Ø–õ ‚Üí"
      },
      step6: {
        title: "–ü—Ä–∞–∫—Ç–∏–∫–∞: –ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –∫–æ–¥",
        description: "–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é-–ø–µ—Ä–µ—Ö–æ–¥, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ —á–∏—Å–ª–∞ u32 –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ö —Å—É–º–º—É:",
        hint: "üí° –ü–û–î–°–ö–ê–ó–ö–ê",
        hintShow: "–ü–æ–∫–∞–∑–∞—Ç—å",
        hintHide: "–°–∫—Ä—ã—Ç—å",
        hintTitle: "–§–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã:",
        hintText: "transition main(a: u32, b: u32) -> u32 { ... }",
        placeholder: "–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –∫–æ–¥ –∑–¥–µ—Å—å...",
        check: "–ü–†–û–í–ï–†–ò–¢–¨ –ö–û–î",
        success: "‚úì –û—Ç–ª–∏—á–Ω–æ! –í–∞—à –∫–æ–¥ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π!",
        error: "‚úó –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑. –ü–æ–¥—Å–∫–∞–∑–∫–∞: –Ω–∞—á–Ω–∏—Ç–µ —Å \"transition main\"",
        complete: "–ú–∏—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!",
        reward: "–í—ã –ø–æ–ª—É—á–∏–ª–∏: Proof of Mastery #2",
        returning: "–í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –∫ –º–∏—Å—Å–∏—è–º..."
      }
    },
    
    theCircuit: {
      back: "‚Üê –ù–ê–ó–ê–î –ö –ú–ò–°–°–ò–Ø–ú",
      progress: "–ü—Ä–æ–≥—Ä–µ—Å—Å",
      steps: "–®–∞–≥–æ–≤",
      title: "The Circuit",
      subtitle: "–°–æ–∑–¥–∞—Ç—å —Å–≤–æ–π –ø–µ—Ä–≤—ã–π circuit",
      intermediate: "–°–†–ï–î–ù–ò–ô",
      reward: "Proof of Build #3",
      step1: {
        title: "–ß—Ç–æ —Ç–∞–∫–æ–µ ZK-Circuit?",
        description: "ZK-Circuit (—Å—Ö–µ–º–∞ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ —Å –Ω—É–ª–µ–≤—ã–º —Ä–∞–∑–≥–ª–∞—à–µ–Ω–∏–µ–º) ‚Äî —ç—Ç–æ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–Ω–æ –¥–æ–∫–∞–∑–∞—Ç—å –±–µ–∑ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö. –≠—Ç–æ —è–¥—Ä–æ –ª—é–±–æ–≥–æ ZK-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ Aleo.",
        howItWorks: "üîÑ –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:",
        step1Text: "–í—ã –ø–∏—à–µ—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –Ω–∞ Leo",
        step2Text: "–ö–æ–º–ø–∏–ª—è—Ç–æ—Ä –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –µ—ë –≤ —Å—Ö–µ–º—É (circuit)",
        step3Text: "–°—Ö–µ–º–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ",
        step4Text: "–õ—é–±–æ–π –º–æ–∂–µ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ",
        button: "–ü–û–ù–Ø–¢–ù–û ‚Üí"
      },
      step2: {
        title: "–°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ Circuit",
        description: "–î–∞–≤–∞–π—Ç–µ —Å–æ–∑–¥–∞–¥–∏–º –ø—Ä–æ—Å—Ç–æ–π circuit –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É record –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è.",
        codeTitle: "üìù –ü–†–ò–í–ê–¢–ù–´–ô –¢–û–ö–ï–ù",
        codeFile: "token.leo",
        keyPoints: "üîë –ö–ª—é—á–µ–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã:",
        point1: "record - –ø—Ä–∏–≤–∞—Ç–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö",
        point2: "–í—Å–µ –¥–∞–Ω–Ω—ã–µ –≤–Ω—É—Ç—Ä–∏ record –ø—Ä–∏–≤–∞—Ç–Ω—ã",
        point3: "–¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ–∏ records",
        point4: "–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å–æ–∑–¥–∞—é—Ç –Ω–æ–≤—ã–µ records, —É–Ω–∏—á—Ç–æ–∂–∞—è —Å—Ç–∞—Ä—ã–µ",
        button: "–ö–†–£–¢–û, –ß–¢–û –î–ê–õ–¨–®–ï? ‚Üí"
      },
      step3new: {
        title: "–ö–æ–º–ø–∏–ª—è—Ü–∏—è –≤ —Å—Ö–µ–º—É",
        description: "–ö–æ–º–ø–∏–ª—è—Ç–æ—Ä Leo –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –≤–∞—à –∫–æ–¥ –≤ ZK-—Å—Ö–µ–º—É. –î–∞–≤–∞–π—Ç–µ —Ä–∞–∑–±–µ—Ä–µ–º—Å—è –≤ —ç—Ç–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ:",
        step1Title: "–ü–∞—Ä—Å–∏–Ω–≥",
        step1Text: "–ö–æ–º–ø–∏–ª—è—Ç–æ—Ä –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∏ —Å–æ–∑–¥–∞–µ—Ç –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–æ–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–æ–µ –¥–µ—Ä–µ–≤–æ (AST) –∏–∑ –≤–∞—à–µ–≥–æ –∫–æ–¥–∞.",
        step2Title: "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ö–µ–º—ã",
        step2Text: "AST –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç—Å—è –≤ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è - —É—Ä–∞–≤–Ω–µ–Ω–∏—è, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–µ –≤–∞—à–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è.",
        step3Title: "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è",
        step3Text: "–ö–æ–º–ø–∏–ª—è—Ç–æ—Ä –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏ —Ä–∞–∑–º–µ—Ä–∞ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞.",
        button: "–ò–ù–¢–ï–†–ï–°–ù–û ‚Üí"
      },
      step4new: {
        title: "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å—Ö–µ–º",
        description: "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è ZK-—Å—Ö–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω–∞ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏. –ú–µ–Ω—å—à–∏–µ —Å—Ö–µ–º—ã –æ–∑–Ω–∞—á–∞—é—Ç –±–æ–ª–µ–µ –±—ã—Å—Ç—Ä—ã–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –∏ –º–µ–Ω—å—à—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å.",
        whyTitle: "–ó–∞—á–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å?",
        why1: "–ë—ã—Å—Ç—Ä–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤ - –º–µ–Ω—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ proof",
        why2: "–ú–µ–Ω—å—à–∏–π —Ä–∞–∑–º–µ—Ä –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ - –ø—Ä–æ—â–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∏ —Ö—Ä–∞–Ω–∏—Ç—å",
        why3: "–ú–µ–Ω—å—à–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å gas - –¥–µ—à–µ–≤–ª–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ –±–ª–æ–∫—á–µ–π–Ω–µ",
        technique1: "–°–æ–∫—Ä–∞—â–µ–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π",
        technique1Text: "–ú–∏–Ω–∏–º–∏–∑–∏—Ä—É–π—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π, —Å–æ—Ö—Ä–∞–Ω—è—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤—ã—á–∏—Å–ª–µ–Ω–∏–π.",
        technique2: "–¢–∞–±–ª–∏—Ü—ã –ø–æ–∏—Å–∫–∞",
        technique2Text: "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–µ–¥–≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —á–∞—Å—Ç—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –≤–º–µ—Å—Ç–æ –∏—Ö –ø–µ—Ä–µ—Å—á–µ—Ç–∞.",
        button: "–ü–û–ù–Ø–õ ‚Üí"
      },
      step3: {
        title: "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞–Ω–∏–π",
        description: "–ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –≤ Leo, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è?",
        yourAnswer: "–í–ê–® –û–¢–í–ï–¢ (–æ–¥–Ω–æ —Å–ª–æ–≤–æ)",
        placeholder: "–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç...",
        hint: "üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞:",
        hintShow: "–ü–æ–∫–∞–∑–∞—Ç—å",
        hintHide: "–°–∫—Ä—ã—Ç—å",
        hintText: "–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ –∫–æ–¥ –≤—ã—à–µ. –ö–∞–∫–æ–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–µ—Ä–µ–¥ \"Token\"?",
        check: "–ü–†–û–í–ï–†–ò–¢–¨ –û–¢–í–ï–¢ ‚úì",
        success: "‚úì –ü—Ä–∞–≤–∏–ª—å–Ω–æ! record - —ç—Ç–æ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö.",
        error: "‚úó –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü–æ–¥—Å–∫–∞–∑–∫–∞: –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 'r'."
      },
      step4: {
        title: "–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç",
        description: "–ö—Ç–æ –≤ ZK-—Å–∏—Å—Ç–µ–º–µ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö?",
        option1: "Prover (–î–æ–∫–∞–∑—ã–≤–∞—é—â–∏–π)",
        option2: "Verifier (–ü—Ä–æ–≤–µ—Ä—è—é—â–∏–π)",
        option3: "–ö–æ–º–ø–∏–ª—è—Ç–æ—Ä",
        check: "–ü–†–û–í–ï–†–ò–¢–¨ ‚úì",
        success: "‚úì –ü—Ä–∞–≤–∏–ª—å–Ω–æ! Prover —Å–æ–∑–¥–∞–µ—Ç –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ.",
        error: "‚úó –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ö—Ç–æ —Å–æ–∑–¥–∞–µ—Ç –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ –≤ ZK-—Å–∏—Å—Ç–µ–º–µ?"
      }
    },
    
    theNetwork: {
      back: "‚Üê –ù–ê–ó–ê–î –ö –ú–ò–°–°–ò–Ø–ú",
      progress: "–ü—Ä–æ–≥—Ä–µ—Å—Å",
      steps: "–®–∞–≥–æ–≤",
      title: "The Network",
      subtitle: "–ó–∞–ø—É—Å—Ç–∏—Ç—å dApp –Ω–∞ Aleo",
      advanced: "–ü–†–û–î–í–ò–ù–£–¢–´–ô",
      reward: "Proof of Deployment #4",
      step1: {
        title: "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å–µ—Ç–∏ Aleo",
        description: "Aleo ‚Äî —ç—Ç–æ Layer 1 –±–ª–æ–∫—á–µ–π–Ω, –≥–¥–µ –≤—Å–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç off-chain —Å –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞–º–∏, –∞ –≤–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç on-chain. –≠—Ç–æ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å –∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å.",
        offchainTitle: "‚öôÔ∏è Off-chain",
        offchainText: "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤",
        onchainTitle: "‚õìÔ∏è On-chain",
        onchainText: "–í–∞–ª–∏–¥–∞—Ü–∏—è –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤ –∏ —Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è",
        privacyTitle: "üîí Privacy",
        privacyText: "–ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –∏ –ª–æ–≥–∏–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
        networkComponents: "üåê –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–µ—Ç–∏:",
        validators: "Validators:",
        validatorsText: "–ø—Ä–æ–≤–µ—Ä—è—é—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏ —Å–æ–∑–¥–∞—é—Ç –±–ª–æ–∫–∏",
        provers: "Provers:",
        proversText: "–≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç ZK-–¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞",
        clients: "Clients:",
        clientsText: "–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É—é—Ç —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º–∏",
        button: "–ü–û–ù–Ø–¢–ù–û, –ö–ê–ö –î–ï–ü–õ–û–ò–¢–¨? ‚Üí"
      },
      step2new: {
        title: "–ú–µ—Ö–∞–Ω–∏–∑–º –∫–æ–Ω—Å–µ–Ω—Å—É—Å–∞ Aleo",
        description: "Aleo –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≥–∏–±—Ä–∏–¥–Ω—ã–π –∫–æ–Ω—Å–µ–Ω—Å—É—Å, –æ–±—ä–µ–¥–∏–Ω—è—é—â–∏–π Proof of Stake (PoS) –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏ Proof of Work (PoW) –¥–ª—è –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤. –≠—Ç–æ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –¥–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–∞—Ü–∏—é —Å–µ—Ç–∏.",
        posTitle: "Proof of Stake (PoS)",
        posText: "–í–∞–ª–∏–¥–∞—Ç–æ—Ä—ã —Å—Ç–µ–π–∫–∞—é—Ç –∫—Ä–µ–¥–∏—Ç—ã –∏ –ø—Ä–æ–≤–µ—Ä—è—é—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏. –û–Ω–∏ –ø–æ–ª—É—á–∞—é—Ç –Ω–∞–≥—Ä–∞–¥—ã –∑–∞ —á–µ—Å—Ç–Ω—É—é —Ä–∞–±–æ—Ç—É –∏ —Ç–µ—Ä—è—é—Ç —Å—Ç–µ–π–∫ –∑–∞ –≤—Ä–µ–¥–æ–Ω–æ—Å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è.",
        powTitle: "Proof of Work (PoW)",
        powText: "–î–æ–∫–∞–∑—ã–≤–∞—é—â–∏–µ —Å–æ—Ä–µ–≤–Ω—É—é—Ç—Å—è –≤ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ ZK-–¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤. –û–Ω–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—É—é –º–æ—â–Ω–æ—Å—Ç—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤ –∏ –ø–æ–ª—É—á–∞—é—Ç –Ω–∞–≥—Ä–∞–¥—ã.",
        coinbaseTitle: "üí∞ Coinbase Puzzle:",
        coinbaseText: "Aleo –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π Coinbase Puzzle - –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—É—é –∑–∞–¥–∞—á—É, –∫–æ—Ç–æ—Ä–∞—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å —Å–µ—Ç–∏ –∏ ZK-–¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞.",
        button: "–ü–û–ù–Ø–õ ‚Üí"
      },
      step3new: {
        title: "–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏ Records",
        description: "–í Aleo —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Ç—Ä–∏ —Ç–∏–ø–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π. –ö–∞–∂–¥—ã–π —Å–ª—É–∂–∏—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π —Ü–µ–ª–∏ –≤ —Å–µ—Ç–∏.",
        deployTitle: "Deploy",
        deployText: "–ü—É–±–ª–∏–∫—É–µ—Ç –Ω–æ–≤—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É –≤ –±–ª–æ–∫—á–µ–π–Ω. –ü—Ä–æ–≥—Ä–∞–º–º–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –¥–æ—Å—Ç—É–ø–Ω–∞ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.",
        executeTitle: "Execute",
        executeText: "–í—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é-–ø–µ—Ä–µ—Ö–æ–¥ –∑–∞–¥–µ–ø–ª–æ–µ–Ω–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã. –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏ –∏ —Ç—Ä–∞—Ç–∏—Ç —Å—Ç–∞—Ä—ã–µ.",
        feeTitle: "Fee",
        feeText: "–û–ø–ª–∞—á–∏–≤–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏. –ö–æ–º–ø–µ–Ω—Å–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–æ–≤ –∏ –¥–æ–∫–∞–∑—ã–≤–∞—é—â–∏—Ö.",
        recordTitle: "üîí Records - –ø—Ä–∏–≤–∞—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:",
        recordText: "Records —Ö—Ä–∞–Ω—è—Ç –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ on-chain. –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –º–æ–∂–µ—Ç —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ–∏ –∑–∞–ø–∏—Å–∏. –ö–∞–∂–¥–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –ø–æ—Ç—Ä–µ–±–ª—è–µ—Ç –≤—Ö–æ–¥–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –∏ —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–µ –≤—ã—Ö–æ–¥–Ω—ã–µ.",
        button: "–ü–û–ù–Ø–õ ‚Üí"
      },
      step2: {
        title: "–ü—Ä–æ—Ü–µ—Å—Å –¥–µ–ø–ª–æ—è –ø—Ä–æ–≥—Ä–∞–º–º—ã",
        description: "–î–ª—è –¥–µ–ø–ª–æ—è –ø—Ä–æ–≥—Ä–∞–º–º—ã –Ω–∞ Aleo –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —à–∞–≥–æ–≤: –Ω–∞–ø–∏—Å–∞—Ç—å –∫–æ–¥, —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞—Ç—å, —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á–∏ –∏ –∑–∞–¥–µ–ø–ª–æ–∏—Ç—å –≤ —Å–µ—Ç—å.",
        step1Title: "–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞",
        step1Command: "leo new my_app",
        step2Title: "–ù–∞–ø–∏—Å–∞–Ω–∏–µ –∫–æ–¥–∞",
        step2Command: "cd my_app && edit src/main.leo",
        step3Title: "–ö–æ–º–ø–∏–ª—è—Ü–∏—è",
        step3Command: "leo build",
        step4Title: "–î–µ–ø–ª–æ–π –≤ —Å–µ—Ç—å",
        step4Command: "leo deploy --network testnet",
        important: "‚ö†Ô∏è –í–∞–∂–Ω–æ:",
        point1: "–î–ª—è –¥–µ–ø–ª–æ—è –Ω—É–∂–Ω—ã Aleo credits (–Ω–∞ testnet –±–µ—Å–ø–ª–∞—Ç–Ω–æ)",
        point2: "–ö–∞–∂–¥–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –∏–º–µ–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è –≤ —Å–µ—Ç–∏",
        point3: "–ü–æ—Å–ª–µ –¥–µ–ø–ª–æ—è –ø—Ä–æ–≥—Ä–∞–º–º—É –Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å",
        button: "–û–¢–õ–ò–ß–ù–û, –ö –ü–†–ê–ö–¢–ò–ö–ï! ‚Üí"
      },
      step3: {
        title: "–í—ã–±–æ—Ä —Å–µ—Ç–∏ –¥–ª—è –¥–µ–ø–ª–æ—è",
        description: "Aleo –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ—Ç–µ–π –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞. –î–ª—è –æ–±—É—á–µ–Ω–∏—è –º—ã –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å testnet.",
        mainnet: "Mainnet",
        mainnetLabel: "Production",
        mainnetDesc: "–û—Å–Ω–æ–≤–Ω–∞—è —Å–µ—Ç—å –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π. –¢—Ä–µ–±—É–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–µ Aleo credits.",
        testnet: "Testnet",
        testnetLabel: "Recommended",
        testnetDesc: "–¢–µ—Å—Ç–æ–≤–∞—è —Å–µ—Ç—å –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏. –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ credits –∏–∑ faucet.",
        local: "Local",
        localLabel: "Development",
        localDesc: "–õ–æ–∫–∞–ª—å–Ω–∞—è –Ω–æ–¥–∞ –Ω–∞ –≤–∞—à–µ–º –∫–æ–º–ø—å—é—Ç–µ—Ä–µ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.",
        button: "–í–´–ë–†–ê–õ, –î–ï–ü–õ–û–ò–ú! ‚Üí"
      },
      step4: {
        title: "–î–µ–ø–ª–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã",
        description: "–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –¥–ª—è –¥–µ–ø–ª–æ—è –≤–∞—à–µ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤ –≤—ã–±—Ä–∞–Ω–Ω—É—é —Å–µ—Ç—å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Leo CLI –∫–æ–º–∞–Ω–¥—É.",
        terminal: "–¢–ï–†–ú–ò–ù–ê–õ",
        hint: "üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞:",
        hintShow: "–ü–æ–∫–∞–∑–∞—Ç—å",
        hintHide: "–°–∫—Ä—ã—Ç—å",
        hintCommand: "–ö–æ–º–∞–Ω–¥–∞:",
        hintButton: "üëÅÔ∏è –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫—É",
        selectedNetwork: "üìã –í—ã–±—Ä–∞–Ω–Ω–∞—è —Å–µ—Ç—å:",
        notSelected: "–ù–µ –≤—ã–±—Ä–∞–Ω–∞",
        placeholder: "leo deploy...",
        deploy: "–ó–ê–ü–£–°–¢–ò–¢–¨ –î–ï–ü–õ–û–ô üöÄ",
        building: "üì¶ Building program...",
        generating: "üîê Generating proving key...",
        connecting: "üì° Connecting to Aleo testnet...",
        success: "‚úì Program deployed successfully!",
        error: "‚úó –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –∏–ª–∏ —Å–µ—Ç—å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \"leo deploy\" –∏ –≤—ã–±–µ—Ä–∏—Ç–µ testnet.",
        missionComplete: "–ú–∏—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!",
        reward: "–í—ã –ø–æ–ª—É—á–∏–ª–∏: Proof of Deployment #4",
        congratsMessage: "–í–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–¥–µ–ø–ª–æ–µ–Ω–æ –≤ Aleo Network!",
        returning: "–í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –∫ —Å–ø–∏—Å–∫—É –º–∏—Å—Å–∏–π..."
      },
      step7: {
        title: "–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ç–∏",
        description: "–¢–µ–ø–µ—Ä—å –¥–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–µ—Ç—å Aleo –≤ –¥–µ–π—Å—Ç–≤–∏–∏. –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–π—Ç–µ —Å —É–∑–ª–∞–º–∏ –∏ —Å–∏–º—É–ª–∏—Ä—É–π—Ç–µ proof flow.",
        nodesTitle: "üåê –£–∑–ª—ã —Å–µ—Ç–∏ (–Ω–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ)",
        prover: "Prover",
        proverDesc: "–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç ZK-–¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –∏–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã",
        proverActive: "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–æ–≥–æ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞...",
        validator: "Validator",
        validatorDesc: "–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏",
        validatorActive: "–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞...",
        blockchain: "Blockchain",
        blockchainDesc: "–•—Ä–∞–Ω–∏—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ on-chain",
        blockchainActive: "–ó–∞–ø–∏—Å—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ –±–ª–æ–∫—á–µ–π–Ω...",
        simulateTitle: "üîÑ –°–∏–º—É–ª—è—Ü–∏—è Proof Flow",
        simulateDesc: "–í–≤–µ–¥–∏—Ç–µ –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –Ω–∞–±–ª—é–¥–∞–π—Ç–µ, –∫–∞–∫ –æ–Ω–∏ –ø—Ä–µ–≤—Ä–∞—â–∞—é—Ç—Å—è –≤ ZK-proof, –ø—Ä–æ–≤–µ—Ä—è—é—Ç—Å—è –∏ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è on-chain.",
        inputPlaceholder: "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 42)",
        executeButton: "–°–ì–ï–ù–ï–†–ò–†–û–í–ê–¢–¨ –ò –í–´–ü–û–õ–ù–ò–¢–¨ PROOF",
        generating: "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è ZK-proof...",
        verifying: "Validator –ø—Ä–æ–≤–µ—Ä—è–µ—Ç proof...",
        writing: "–ó–∞–ø–∏—Å—å –≤ blockchain...",
        proofSuccess: "Proof —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω –∏ –∑–∞–ø–∏—Å–∞–Ω!",
        proofPrivate: "–í–∞—à–∏ –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞—é—Ç—Å—è –ø—Ä–∏–≤–∞—Ç–Ω—ã–º–∏, –ø—É–±–ª–∏—á–µ–Ω —Ç–æ–ª—å–∫–æ proof.",
        recordsTitle: "üîí –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ Records",
        showRecords: "–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä—ã",
        hideRecords: "–°–∫—Ä—ã—Ç—å",
        record1Title: "Record #1 (–î–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏)",
        record2Title: "Record #2 (–ü–æ—Å–ª–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏)",
        recordsNote: "Records –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω—ã on-chain. –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü—ã –º–æ–≥—É—Ç —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ."
      }
    },
    
    howAleoWorks: {
      back: "‚Üê –ù–ê–ó–ê–î –ö –ú–ò–°–°–ò–Ø–ú",
      progress: "–ü—Ä–æ–≥—Ä–µ—Å—Å",
      steps: "–®–∞–≥–æ–≤",
      title: "–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç Aleo",
      subtitle: "–ü–æ–Ω—è—Ç—å –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É Aleo",
      intermediate: "–°–†–ï–î–ù–ò–ô",
      reward: "–î–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ –ø–æ–Ω–∏–º–∞–Ω–∏—è #4",
      step1: {
        title: "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å–µ—Ç–∏ Aleo",
        description: "Aleo ‚Äî —ç—Ç–æ Layer 1 –±–ª–æ–∫—á–µ–π–Ω, –≥–¥–µ –≤—Å–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç off-chain —Å –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞–º–∏, –∞ –≤–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç on-chain. –≠—Ç–æ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å –∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å.",
        offchainTitle: "Off-chain",
        offchainText: "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤",
        onchainTitle: "On-chain",
        onchainText: "–í–∞–ª–∏–¥–∞—Ü–∏—è –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤ –∏ —Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è",
        componentsTitle: "üåê –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–µ—Ç–∏:",
        prover: "Prover",
        proverText: "–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç ZK-–¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –∏–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã",
        validator: "Validator",
        validatorText: "–ø—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏",
        client: "Client",
        clientText: "–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–µ—Ç —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º–∏",
        button: "–ü–û–ù–Ø–¢–ù–û, –ö–ê–ö –†–ê–ë–û–¢–ê–ï–¢ –ö–û–ù–°–ï–ù–°–£–°? ‚Üí"
      },
      
      step2: {
        title: "–ú–µ—Ö–∞–Ω–∏–∑–º –∫–æ–Ω—Å–µ–Ω—Å—É—Å–∞ Aleo",
        description: "Aleo –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≥–∏–±—Ä–∏–¥–Ω—ã–π –∫–æ–Ω—Å–µ–Ω—Å—É—Å, –æ–±—ä–µ–¥–∏–Ω—è—é—â–∏–π Proof of Stake (PoS) –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏ Proof of Work (PoW) –¥–ª—è –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤. –≠—Ç–æ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –¥–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–∞—Ü–∏—é —Å–µ—Ç–∏.",
        posTitle: "Proof of Stake (PoS)",
        posText: "–í–∞–ª–∏–¥–∞—Ç–æ—Ä—ã —Å—Ç–µ–π–∫–∞—é—Ç –∫—Ä–µ–¥–∏—Ç—ã –∏ –ø—Ä–æ–≤–µ—Ä—è—é—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏. –û–Ω–∏ –ø–æ–ª—É—á–∞—é—Ç –Ω–∞–≥—Ä–∞–¥—ã –∑–∞ —á–µ—Å—Ç–Ω—É—é —Ä–∞–±–æ—Ç—É –∏ —Ç–µ—Ä—è—é—Ç —Å—Ç–µ–π–∫ –∑–∞ –≤—Ä–µ–¥–æ–Ω–æ—Å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è.",
        powTitle: "Proof of Work (PoW)",
        powText: "–î–æ–∫–∞–∑—ã–≤–∞—é—â–∏–µ —Å–æ—Ä–µ–≤–Ω—É—é—Ç—Å—è –≤ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ ZK-–¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤. –û–Ω–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—É—é –º–æ—â–Ω–æ—Å—Ç—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤ –∏ –ø–æ–ª—É—á–∞—é—Ç –Ω–∞–≥—Ä–∞–¥—ã.",
        coinbaseTitle: "üí∞ Coinbase Puzzle:",
        coinbaseText: "Aleo –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π Coinbase Puzzle - –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—É—é –∑–∞–¥–∞—á—É, –∫–æ—Ç–æ—Ä–∞—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å —Å–µ—Ç–∏ –∏ ZK-–¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞.",
        button: "–ü–û–ù–Ø–õ ‚Üí"
      },
      
      step3: {
        title: "–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏ Records",
        description: "–í Aleo —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Ç—Ä–∏ —Ç–∏–ø–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π. –ö–∞–∂–¥—ã–π —Å–ª—É–∂–∏—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π —Ü–µ–ª–∏ –≤ —Å–µ—Ç–∏.",
        deployTitle: "Deploy",
        deployText: "–ü—É–±–ª–∏–∫—É–µ—Ç –Ω–æ–≤—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É –≤ –±–ª–æ–∫—á–µ–π–Ω. –ü—Ä–æ–≥—Ä–∞–º–º–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –¥–æ—Å—Ç—É–ø–Ω–∞ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.",
        executeTitle: "Execute",
        executeText: "–í—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é-–ø–µ—Ä–µ—Ö–æ–¥ –∑–∞–¥–µ–ø–ª–æ–µ–Ω–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã. –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏ –∏ —Ç—Ä–∞—Ç–∏—Ç —Å—Ç–∞—Ä—ã–µ.",
        feeTitle: "Fee",
        feeText: "–û–ø–ª–∞—á–∏–≤–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏. –ö–æ–º–ø–µ–Ω—Å–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–æ–≤ –∏ –¥–æ–∫–∞–∑—ã–≤–∞—é—â–∏—Ö.",
        recordTitle: "üîí Records - –ø—Ä–∏–≤–∞—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:",
        recordText: "Records —Ö—Ä–∞–Ω—è—Ç –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ on-chain. –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –º–æ–∂–µ—Ç —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ–∏ –∑–∞–ø–∏—Å–∏. –ö–∞–∂–¥–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –ø–æ—Ç—Ä–µ–±–ª—è–µ—Ç –≤—Ö–æ–¥–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –∏ —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–µ –≤—ã—Ö–æ–¥–Ω—ã–µ.",
        button: "–ü–û–ù–Ø–õ ‚Üí"
      },
      
      step4: {
        title: "–ü–æ—Ç–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π",
        description: "–î–∞–≤–∞–π—Ç–µ –ø–æ–π–º–µ–º, –∫–∞–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –ø—Ä–æ—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ —Å–µ—Ç—å Aleo –æ—Ç –∏–Ω–∏—Ü–∏–∞—Ü–∏–∏ –¥–æ —Ñ–∏–Ω–∞–ª–∏–∑–∞—Ü–∏–∏.",
        step1Title: "1. –ò–Ω–∏—Ü–∏–∞—Ü–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏",
        step1Text: "–ö–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é —Å –ø—Ä–∏–≤–∞—Ç–Ω—ã–º–∏ –≤—Ö–æ–¥–∞–º–∏ –∏ –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–æ–≥—Ä–∞–º–º—ã.",
        step2Title: "2. Off-chain –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ",
        step2Text: "–ü—Ä–æ–≥—Ä–∞–º–º–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è off-chain, –≥–µ–Ω–µ—Ä–∏—Ä—É—è ZK-–¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–∫–∞–∑—ã–≤–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –±–µ–∑ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è –≤—Ö–æ–¥–æ–≤.",
        step3Title: "3. –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞",
        step3Text: "Prover –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é —Å ZK-–¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞–º–∏ –≤ —Å–µ—Ç—å –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏.",
        step4Title: "4. On-chain –≤–∞–ª–∏–¥–∞—Ü–∏—è",
        step4Text: "–í–∞–ª–∏–¥–∞—Ç–æ—Ä—ã –ø—Ä–æ–≤–µ—Ä—è—é—Ç ZK-–¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –∏ –¥–æ–±–∞–≤–ª—è—é—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –≤ –±–ª–æ–∫, –µ—Å–ª–∏ –æ–Ω–∞ –≤–∞–ª–∏–¥–Ω–∞.",
        button: "–ü–û–ù–Ø–õ ‚Üí"
      },
      
      step5: {
        title: "–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ç–∏",
        description: "–¢–µ–ø–µ—Ä—å –¥–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–µ—Ç—å Aleo –≤ –¥–µ–π—Å—Ç–≤–∏–∏. 3D –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–µ—Ç–∏ –∏ –∏—Ö –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ.",
        visualizationText: "–î–≤–∏–≥–∞–π—Ç–µ –º—ã—à—å—é, —á—Ç–æ–±—ã –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å 3D —Å–µ—Ç—å. –ö–∞–∂–¥—ã–π —Ü–≤–µ—Ç–Ω–æ–π —É–∑–µ–ª –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π —Ä–∞–∑–ª–∏—á–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã Aleo.",
        button: "–ó–ê–í–ï–†–®–ò–¢–¨ –ú–ò–°–°–ò–Æ ‚úì"
      },
      oldsteps: {
        old: `
          <div class="space-y-6">
            <div class="bg-gradient-to-r from-[#00fff7]/10 to-[#c084fc]/10 p-6 rounded-xl border border-[#00fff7]/20">
              <h3 class="text-2xl font-bold text-[#00fff7] mb-4">‚öîÔ∏è –ë–∏—Ç–≤–∞ –∑–∞ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å</h3>
              <p class="text-gray-300 mb-4">
                –•–æ—Ç—è Ethereum —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–ª —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã, —É –Ω–µ–≥–æ –µ—Å—Ç—å —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ–∫: 
                <span class="text-red-400 font-bold">–≤—Å—ë –ø—É–±–ª–∏—á–Ω–æ</span>. 
                Aleo –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç —ç—Ç–æ, –¥–µ–ª–∞—è –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –∞ –Ω–µ –∑–∞–ø–æ–∑–¥–∞–ª–æ–π –º—ã—Å–ª—å—é.
              </p>
            </div>
            
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
              <div class="bg-gradient-to-br from-red-500/10 to-red-600/5 p-6 rounded-xl border border-red-500/20">
                <h4 class="text-xl font-bold text-red-400 mb-4 flex items-center">
                  <span class="text-2xl mr-2">üîç</span>
                  –ü—Ä–æ–±–ª–µ–º–∞ Ethereum
                </h4>
                <ul class="space-y-3 text-gray-300">
                  <li class="flex items-start">
                    <span class="text-red-400 mr-2">‚ùå</span>
                    <span>–í—Å–µ –¥–∞–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø—É–±–ª–∏—á–Ω—ã –∏ –≤–∏–¥–Ω—ã</span>
                  </li>
                  <li class="flex items-start">
                    <span class="text-red-400 mr-2">‚ùå</span>
                    <span>–°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ</span>
                  </li>
                  <li class="flex items-start">
                    <span class="text-red-400 mr-2">‚ùå</span>
                    <span>–ë–∞–ª–∞–Ω—Å—ã –∏ –ø–µ—Ä–µ–≤–æ–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Ä–∞—Å–∫—Ä—ã—Ç—ã</span>
                  </li>
                  <li class="flex items-start">
                    <span class="text-red-400 mr-2">‚ùå</span>
                    <span>–ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å —Ç—Ä–µ–±—É–µ—Ç —Å–ª–æ–∂–Ω—ã—Ö –æ–±—Ö–æ–¥–Ω—ã—Ö –ø—É—Ç–µ–π (Tornado Cash)</span>
                  </li>
                </ul>
              </div>
              
              <div class="bg-gradient-to-br from-[#00fff7]/10 to-[#c084fc]/10 p-6 rounded-xl border border-[#00fff7]/20">
                <h4 class="text-xl font-bold text-[#00fff7] mb-4 flex items-center">
                  <span class="text-2xl mr-2">üõ°Ô∏è</span>
                  –†–µ—à–µ–Ω–∏–µ Aleo
                </h4>
                <ul class="space-y-3 text-gray-300">
                  <li class="flex items-start">
                    <span class="text-green-400 mr-2">‚úÖ</span>
                    <span>–ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é</span>
                  </li>
                  <li class="flex items-start">
                    <span class="text-green-400 mr-2">‚úÖ</span>
                    <span>Zero-knowledge –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ —Å–∫—Ä—ã–≤–∞—é—Ç –≤—ã—á–∏—Å–ª–µ–Ω–∏—è</span>
                  </li>
                  <li class="flex items-start">
                    <span class="text-green-400 mr-2">‚úÖ</span>
                    <span>–¢–æ–ª—å–∫–æ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –ø—É–±–ª–∏—á–Ω—ã, –¥–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞—é—Ç—Å—è –ø—Ä–∏–≤–∞—Ç–Ω—ã–º–∏</span>
                  </li>
                  <li class="flex items-start">
                    <span class="text-green-400 mr-2">‚úÖ</span>
                    <span>–ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å –≤—Å—Ç—Ä–æ–µ–Ω–∞ –≤ –ø—Ä–æ—Ç–æ–∫–æ–ª</span>
                  </li>
                </ul>
              </div>
            </div>
            
            <div class="bg-gradient-to-r from-[#c084fc]/10 to-[#00fff7]/10 p-6 rounded-xl border border-[#c084fc]/20">
              <h3 class="text-2xl font-bold text-[#c084fc] mb-4">üìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏</h3>
              <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                <div class="bg-black/40 p-4 rounded-lg text-center">
                  <h4 class="text-[#00fff7] font-bold mb-2">–°–∫–æ—Ä–æ—Å—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π</h4>
                  <div class="text-2xl font-bold text-white mb-1">~100–º—Å</div>
                  <div class="text-sm text-gray-400">Aleo (Off-chain)</div>
                  <div class="text-xs text-red-400 mt-1">vs 15—Å Ethereum</div>
                </div>
                <div class="bg-black/40 p-4 rounded-lg text-center">
                  <h4 class="text-[#c084fc] font-bold mb-2">–°—Ç–æ–∏–º–æ—Å—Ç—å –≥–∞–∑–∞</h4>
                  <div class="text-2xl font-bold text-white mb-1">~$0.001</div>
                  <div class="text-sm text-gray-400">Aleo (–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è)</div>
                  <div class="text-xs text-red-400 mt-1">vs $5-50 Ethereum</div>
                </div>
                <div class="bg-black/40 p-4 rounded-lg text-center">
                  <h4 class="text-[#00fff7] font-bold mb-2">–£—Ä–æ–≤–µ–Ω—å –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏</h4>
                  <div class="text-2xl font-bold text-white mb-1">100%</div>
                  <div class="text-sm text-gray-400">Aleo (–ù–∞—Ç–∏–≤–Ω–∞—è)</div>
                  <div class="text-xs text-red-400 mt-1">vs 0% Ethereum</div>
                </div>
              </div>
            </div>
          </div>
        `
      },
      
      oldstuffru2: {
        title: "–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Å–∏–º—É–ª—è—Ç–æ—Ä –∫–æ–Ω—Å–µ–Ω—Å—É—Å–∞",
        description: "–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã –≥–∏–±—Ä–∏–¥–Ω–æ–≥–æ –∫–æ–Ω—Å–µ–Ω—Å—É—Å–∞ Aleo –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏",
        content: `
          <div class="space-y-6">
            <div class="bg-gradient-to-r from-[#00fff7]/10 to-[#c084fc]/10 p-6 rounded-xl border border-[#00fff7]/20">
              <h3 class="text-2xl font-bold text-[#00fff7] mb-4">üéÆ –°–∏–º—É–ª—è—Ç–æ—Ä –∫–æ–Ω—Å–µ–Ω—Å—É—Å–∞</h3>
              <p class="text-gray-300 mb-4">
                –ù–∞–±–ª—é–¥–∞–π—Ç–µ, –∫–∞–∫ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä—ã –∏ –º–∞–π–Ω–µ—Ä—ã —Ä–∞–±–æ—Ç–∞—é—Ç –≤–º–µ—Å—Ç–µ –¥–ª—è –∑–∞—â–∏—Ç—ã —Å–µ—Ç–∏ Aleo. 
                –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –∫–æ–Ω—Å–µ–Ω—Å—É—Å–∞!
              </p>
            </div>
            
            <div class="bg-black/60 rounded-xl p-8 min-h-[400px]">
              <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div class="space-y-4">
                  <h4 class="text-lg font-bold text-[#c084fc] mb-3">–í–∞–ª–∏–¥–∞—Ç–æ—Ä—ã (PoS)</h4>
                  <div class="space-y-2" id="validator-list">
                    <div class="flex items-center justify-between p-3 bg-green-500/20 rounded-lg border border-green-500/30">
                      <span class="text-white">–í–∞–ª–∏–¥–∞—Ç–æ—Ä #1</span>
                      <span class="text-green-400 text-sm">–°—Ç–µ–π–∫: 1000 ALEO</span>
                    </div>
                    <div class="flex items-center justify-between p-3 bg-green-500/20 rounded-lg border border-green-500/30">
                      <span class="text-white">–í–∞–ª–∏–¥–∞—Ç–æ—Ä #2</span>
                      <span class="text-green-400 text-sm">–°—Ç–µ–π–∫: 800 ALEO</span>
                    </div>
                    <div class="flex items-center justify-between p-3 bg-green-500/20 rounded-lg border border-green-500/30">
                      <span class="text-white">–í–∞–ª–∏–¥–∞—Ç–æ—Ä #3</span>
                      <span class="text-green-400 text-sm">–°—Ç–µ–π–∫: 1200 ALEO</span>
                    </div>
                  </div>
                </div>
                
                <div class="space-y-4">
                  <h4 class="text-lg font-bold text-[#00fff7] mb-3">–ú–∞–π–Ω–µ—Ä—ã (PoW)</h4>
                  <div class="space-y-2" id="miner-list">
                    <div class="flex items-center justify-between p-3 bg-blue-500/20 rounded-lg border border-blue-500/30">
                      <span class="text-white">–ú–∞–π–Ω–µ—Ä #1</span>
                      <span class="text-blue-400 text-sm">–•–µ—à: 0x3a7f...</span>
                    </div>
                    <div class="flex items-center justify-between p-3 bg-blue-500/20 rounded-lg border border-blue-500/30">
                      <span class="text-white">–ú–∞–π–Ω–µ—Ä #2</span>
                      <span class="text-blue-400 text-sm">–•–µ—à: 0x8b2e...</span>
                    </div>
                    <div class="flex items-center justify-between p-3 bg-blue-500/20 rounded-lg border border-blue-500/30">
                      <span class="text-white">–ú–∞–π–Ω–µ—Ä #3</span>
                      <span class="text-blue-400 text-sm">–•–µ—à: 0x1c9d...</span>
                    </div>
                  </div>
                </div>
              </div>
              
              <div class="mt-6 text-center">
                <div class="bg-gradient-to-r from-[#00fff7]/20 to-[#c084fc]/20 p-4 rounded-lg border border-[#00fff7]/30">
                  <h4 class="text-lg font-bold text-white mb-2">–¢–µ–∫—É—â–∏–π –±–ª–æ–∫</h4>
                  <div class="text-sm text-gray-400 font-mono">–ë–ª–æ–∫ #1,234,567</div>
                  <div class="text-xs text-[#00fff7] mt-1">–û–±–Ω–æ–≤–ª–µ–Ω–æ: 2 —Å–µ–∫—É–Ω–¥—ã –Ω–∞–∑–∞–¥</div>
                </div>
              </div>
            </div>
            
            <div class="flex justify-center space-x-4">
              <button class="px-6 py-3 bg-[#00fff7] text-black font-bold rounded-lg hover:bg-[#00fff7]/80 transition-all hover:scale-105">
                üé≤ –°–∏–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –±–ª–æ–∫
              </button>
              <button class="px-6 py-3 bg-[#c084fc] text-white font-bold rounded-lg hover:bg-[#c084fc]/80 transition-all hover:scale-105">
                ‚ö° –î–æ–±–∞–≤–∏—Ç—å –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞
              </button>
              <button class="px-6 py-3 bg-green-500 text-white font-bold rounded-lg hover:bg-green-500/80 transition-all hover:scale-105">
                ‚õèÔ∏è –ú–∞–π–Ω–∏—Ç—å –≥–æ–ª–æ–≤–æ–ª–æ–º–∫—É
              </button>
            </div>
          </div>
        `
      },
      
      oldstuffru3: {
        title: "–ü–æ—Ç–æ–∫ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π",
        description: "–ü–æ—à–∞–≥–æ–≤–∞—è —Å–∏–º—É–ª—è—Ü–∏—è –ø—Ä–∏–≤–∞—Ç–Ω–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏",
        content: `
          <div class="space-y-6">
            <div class="bg-gradient-to-r from-[#00fff7]/10 to-[#c084fc]/10 p-6 rounded-xl border border-[#00fff7]/20">
              <h3 class="text-2xl font-bold text-[#00fff7] mb-4">üîê –°–∏–º—É–ª—è—Ç–æ—Ä –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π</h3>
              <p class="text-gray-300 mb-4">
                –°–ª–µ–¥–∏—Ç–µ –∑–∞ –ø—Ä–∏–≤–∞—Ç–Ω–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–µ–π –æ—Ç —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è. 
                –ö–∞–∂–¥—ã–π —à–∞–≥ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –≤–∏–¥–Ω—ã –∫–æ–º—É.
              </p>
            </div>
            
            <div class="space-y-4">
              <div class="flex items-start space-x-4 p-4 bg-gradient-to-r from-green-500/10 to-transparent rounded-lg border border-green-500/20">
                <div class="w-8 h-8 bg-green-500 rounded-full flex items-center justify-center text-black font-bold">1</div>
                <div class="flex-1">
                  <h4 class="text-lg font-bold text-white mb-2">–°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏</h4>
                  <p class="text-gray-400 mb-3">–ê–ª–∏—Å–∞ —Ö–æ—á–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å 5 ALEO –ë–æ–±—É –ø—Ä–∏–≤–∞—Ç–Ω–æ</p>
                  <div class="bg-black/40 p-3 rounded border border-green-500/30">
                    <div class="text-sm text-green-400 font-mono">
                      <div>–û—Ç: alice1...</div>
                      <div>–ö–æ–º—É: bob1...</div>
                      <div>–°—É–º–º–∞: 5 ALEO</div>
                      <div class="text-red-400">–ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: üîí –ó–ê–®–ò–§–†–û–í–ê–ù–´</div>
                    </div>
                  </div>
                </div>
              </div>
              
              <div class="flex items-start space-x-4 p-4 bg-gradient-to-r from-[#00fff7]/10 to-transparent rounded-lg border border-[#00fff7]/20">
                <div class="w-8 h-8 bg-[#00fff7] rounded-full flex items-center justify-center text-black font-bold">2</div>
                <div class="flex-1">
                  <h4 class="text-lg font-bold text-white mb-2">–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞</h4>
                  <p class="text-gray-400 mb-3">–î–æ–∫–∞–∑—ã–≤–∞—é—â–∏–π –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç zero-knowledge –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ</p>
                  <div class="bg-black/40 p-3 rounded border border-[#00fff7]/30">
                    <div class="text-sm text-[#00fff7] font-mono">
                      <div>–î–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ: 0x7f3a8b2e9c1d...</div>
                      <div>–ü—É–±–ª–∏—á–Ω—ã–π –≤—ã–≤–æ–¥: ‚úÖ –í–∞–ª–∏–¥–Ω—ã–π</div>
                      <div>–ü—Ä–∏–≤–∞—Ç–Ω—ã–π –≤–≤–æ–¥: üîí –°–∫—Ä—ã—Ç</div>
                    </div>
                  </div>
                </div>
              </div>
              
              <div class="flex items-start space-x-4 p-4 bg-gradient-to-r from-[#c084fc]/10 to-transparent rounded-lg border border-[#c084fc]/20">
                <div class="w-8 h-8 bg-[#c084fc] rounded-full flex items-center justify-center text-black font-bold">3</div>
                <div class="flex-1">
                  <h4 class="text-lg font-bold text-white mb-2">–û—Ç–ø—Ä–∞–≤–∫–∞ –≤ —Å–µ—Ç—å</h4>
                  <p class="text-gray-400 mb-3">–¢–æ–ª—å–∫–æ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ –∏ –ø—É–±–ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –≤ —Å–µ—Ç—å</p>
                  <div class="bg-black/40 p-3 rounded border border-[#c084fc]/30">
                    <div class="text-sm text-[#c084fc] font-mono">
                      <div>–ü—É–±–ª–∏—á–Ω–æ: ‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –≤–∞–ª–∏–¥–Ω–∞</div>
                      <div>–ü—Ä–∏–≤–∞—Ç–Ω–æ: üîí –ù–µ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è</div>
                      <div>–†–∞–∑–º–µ—Ä: 256 –±–∞–π—Ç (vs 1–ö–ë+ –Ω–∞ Ethereum)</div>
                    </div>
                  </div>
                </div>
              </div>
              
              <div class="flex items-start space-x-4 p-4 bg-gradient-to-r from-yellow-500/10 to-transparent rounded-lg border border-yellow-500/20">
                <div class="w-8 h-8 bg-yellow-500 rounded-full flex items-center justify-center text-black font-bold">4</div>
                <div class="flex-1">
                  <h4 class="text-lg font-bold text-white mb-2">–í–∞–ª–∏–¥–∞—Ü–∏—è</h4>
                  <p class="text-gray-400 mb-3">–í–∞–ª–∏–¥–∞—Ç–æ—Ä—ã –ø—Ä–æ–≤–µ—Ä—è—é—Ç –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ, –Ω–µ –≤–∏–¥—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö</p>
                  <div class="bg-black/40 p-3 rounded border border-yellow-500/30">
                    <div class="text-sm text-yellow-400 font-mono">
                      <div>–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞: ‚úÖ –í–∞–ª–∏–¥–Ω–æ–µ</div>
                      <div>–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞: ‚úÖ –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ</div>
                      <div>–ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: üîí –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã</div>
                    </div>
                  </div>
                </div>
              </div>
              
              <div class="flex items-start space-x-4 p-4 bg-gradient-to-r from-green-500/10 to-transparent rounded-lg border border-green-500/20">
                <div class="w-8 h-8 bg-green-500 rounded-full flex items-center justify-center text-black font-bold">5</div>
                <div class="flex-1">
                  <h4 class="text-lg font-bold text-white mb-2">–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ</h4>
                  <p class="text-gray-400 mb-3">–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –∏ –≤–∫–ª—é—á–µ–Ω–∞ –≤ –±–ª–æ–∫</p>
                  <div class="bg-black/40 p-3 rounded border border-green-500/30">
                    <div class="text-sm text-green-400 font-mono">
                      <div>–ë–ª–æ–∫: #1,234,568</div>
                      <div>–°—Ç–∞—Ç—É—Å: ‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ</div>
                      <div>–ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å: üîí –°–æ—Ö—Ä–∞–Ω–µ–Ω–∞</div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        `
      },
      
      oldstuffru4: {
        title: "–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π 3D –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å —Å–µ—Ç–∏",
        description: "–ò—Å—Å–ª–µ–¥—É–π—Ç–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É Aleo –≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π 3D —Å—Ä–µ–¥–µ",
        content: `
          <div class="space-y-6">
            <div class="bg-gradient-to-r from-[#00fff7]/10 to-[#c084fc]/10 p-6 rounded-xl border border-[#00fff7]/20">
              <h3 class="text-2xl font-bold text-[#00fff7] mb-4">üåê 3D –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å —Å–µ—Ç–∏</h3>
              <p class="text-gray-300 mb-4">
                –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ —Å–µ—Ç–∏ Aleo. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Ä–∞–∑–Ω—ã–µ —É–∑–ª—ã, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –æ–± –∏—Ö —Ä–æ–ª—è—Ö 
                –∏ —É–≤–∏–¥–µ—Ç—å –ø–æ—Ç–æ–∫–∏ –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏.
              </p>
            </div>
            
            <div class="bg-black/60 rounded-xl p-8 min-h-[500px] flex items-center justify-center">
              <div class="text-center">
                <div class="w-20 h-20 bg-gradient-to-r from-[#00fff7] to-[#c084fc] rounded-full flex items-center justify-center mx-auto mb-4 animate-pulse">
                  <span class="text-4xl">üåê</span>
                </div>
                <h4 class="text-2xl font-bold text-white mb-2">3D —Å–µ—Ç—å –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...</h4>
                <p class="text-gray-400 mb-4">–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è 3D –º–æ–¥–µ–ª—å –ø–æ—è–≤–∏—Ç—Å—è –∑–¥–µ—Å—å</p>
                <div class="flex justify-center space-x-2">
                  <div class="w-2 h-2 bg-[#00fff7] rounded-full animate-bounce"></div>
                  <div class="w-2 h-2 bg-[#c084fc] rounded-full animate-bounce" style="animation-delay: 0.1s"></div>
                  <div class="w-2 h-2 bg-[#00fff7] rounded-full animate-bounce" style="animation-delay: 0.2s"></div>
                </div>
              </div>
            </div>
            
            <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
              <div class="bg-black/40 p-4 rounded-lg text-center hover:bg-[#00fff7]/10 transition-colors cursor-pointer">
                <div class="w-6 h-6 bg-[#00fff7] rounded-full mx-auto mb-2"></div>
                <span class="text-sm text-gray-400">–î–æ–∫–∞–∑—ã–≤–∞—é—â–∏–µ</span>
                <div class="text-xs text-[#00fff7] mt-1">–ì–µ–Ω–µ—Ä–∏—Ä—É—é—Ç ZK –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞</div>
              </div>
              <div class="bg-black/40 p-4 rounded-lg text-center hover:bg-[#c084fc]/10 transition-colors cursor-pointer">
                <div class="w-6 h-6 bg-[#c084fc] rounded-full mx-auto mb-2"></div>
                <span class="text-sm text-gray-400">–í–∞–ª–∏–¥–∞—Ç–æ—Ä—ã</span>
                <div class="text-xs text-[#c084fc] mt-1">–ü—Ä–æ–≤–µ—Ä—è—é—Ç –∏ –∑–∞—â–∏—â–∞—é—Ç</div>
              </div>
              <div class="bg-black/40 p-4 rounded-lg text-center hover:bg-green-500/10 transition-colors cursor-pointer">
                <div class="w-6 h-6 bg-green-500 rounded-full mx-auto mb-2"></div>
                <span class="text-sm text-gray-400">–ö–ª–∏–µ–Ω—Ç—ã</span>
                <div class="text-xs text-green-400 mt-1">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å</div>
              </div>
              <div class="bg-black/40 p-4 rounded-lg text-center hover:bg-yellow-500/10 transition-colors cursor-pointer">
                <div class="w-6 h-6 bg-yellow-500 rounded-full mx-auto mb-2"></div>
                <span class="text-sm text-gray-400">–ó–∞–ø–∏—Å–∏</span>
                <div class="text-xs text-yellow-400 mt-1">–ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</div>
              </div>
            </div>
          </div>
        `
      },
      
      oldstuffru5: {
        title: "–í—ã–∑–æ–≤ –∑–Ω–∞–Ω–∏–π: –£–ª—å—Ç–∏–º–∞—Ç–∏–≤–Ω—ã–π —Ç–µ—Å—Ç",
        description: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è —Å –ø–æ–º–æ—â—å—é –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã",
        content: `
          <div class="space-y-6">
            <div class="bg-gradient-to-r from-[#00fff7]/10 to-[#c084fc]/10 p-6 rounded-xl border border-[#00fff7]/20">
              <h3 class="text-2xl font-bold text-[#00fff7] mb-4">üß† –£–ª—å—Ç–∏–º–∞—Ç–∏–≤–Ω—ã–π –≤—ã–∑–æ–≤ –∑–Ω–∞–Ω–∏–π Aleo</h3>
              <p class="text-gray-300 mb-4">
                –î–æ–∫–∞–∂–∏—Ç–µ —Å–≤–æ–µ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã Aleo! –û—Ç–≤–µ—á–∞–π—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ, —á—Ç–æ–±—ã —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å. 
                –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –∑–∞–ø—É—Å—Ç—è—Ç –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è.
              </p>
            </div>
            
            <div class="bg-black/60 rounded-xl p-8 min-h-[400px]">
              <div class="text-center mb-8">
                <div class="text-4xl mb-4">üéØ</div>
                <h4 class="text-2xl font-bold text-white mb-2">–í–æ–ø—Ä–æ—Å 1 –∏–∑ 5</h4>
                <div class="w-full bg-gray-700 rounded-full h-2 mb-4">
                  <div class="bg-gradient-to-r from-[#00fff7] to-[#c084fc] h-2 rounded-full" style="width: 20%"></div>
                </div>
              </div>
              
              <div class="space-y-6">
                <div class="bg-gradient-to-r from-[#c084fc]/10 to-[#00fff7]/10 p-6 rounded-xl border border-[#c084fc]/20">
                  <h4 class="text-xl font-bold text-white mb-4">
                    –ö–∞–∫–æ–µ –≥–ª–∞–≤–Ω–æ–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ –º–æ–¥–µ–ª–∏ off-chain –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è Aleo –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å Ethereum?
                  </h4>
                  
                  <div class="space-y-3">
                    <button class="w-full p-4 text-left bg-black/40 rounded-lg border border-gray-600 hover:border-[#00fff7] hover:bg-[#00fff7]/10 transition-all">
                      <span class="text-[#00fff7] font-bold mr-3">–ê)</span>
                      <span class="text-white">–ë–æ–ª–µ–µ –±—ã—Å—Ç—Ä–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∏ –º–µ–Ω—å—à–∏–µ –∑–∞—Ç—Ä–∞—Ç—ã</span>
                    </button>
                    
                    <button class="w-full p-4 text-left bg-black/40 rounded-lg border border-gray-600 hover:border-[#c084fc] hover:bg-[#c084fc]/10 transition-all">
                      <span class="text-[#c084fc] font-bold mr-3">–ë)</span>
                      <span class="text-white">–õ—É—á—à–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å —á–µ—Ä–µ–∑ proof-of-work</span>
                    </button>
                    
                    <button class="w-full p-4 text-left bg-black/40 rounded-lg border border-gray-600 hover:border-green-500 hover:bg-green-500/10 transition-all">
                      <span class="text-green-500 font-bold mr-3">–í)</span>
                      <span class="text-white">–ë–æ–ª–µ–µ –¥–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω, —á–µ–º –¥—Ä—É–≥–∏–µ –±–ª–æ–∫—á–µ–π–Ω—ã</span>
                    </button>
                    
                    <button class="w-full p-4 text-left bg-black/40 rounded-lg border border-gray-600 hover:border-yellow-500 hover:bg-yellow-500/10 transition-all">
                      <span class="text-yellow-500 font-bold mr-3">–ì)</span>
                      <span class="text-white">–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –º–µ–Ω—å—à–µ —ç–Ω–µ—Ä–≥–∏–∏, —á–µ–º Bitcoin</span>
                    </button>
                  </div>
                </div>
                
                <div class="flex justify-between items-center">
                  <div class="text-sm text-gray-400">
                    –°—á–µ—Ç: <span class="text-[#00fff7] font-bold">0/5</span>
                  </div>
                  <div class="text-sm text-gray-400">
                    –°–µ—Ä–∏—è: <span class="text-[#c084fc] font-bold">0</span>
                  </div>
                </div>
              </div>
            </div>
            
            <div class="text-center">
              <button class="px-8 py-3 bg-gradient-to-r from-[#00fff7] to-[#c084fc] text-white font-bold rounded-lg hover:scale-105 transition-all">
                üöÄ –ù–∞—á–∞—Ç—å –≤—ã–∑–æ–≤
              </button>
            </div>
          </div>
        `
      }
    },
    
    theValidator: {
      back: "‚Üê –ù–ê–ó–ê–î –ö –ú–ò–°–°–ò–Ø–ú",
      progress: "–ü—Ä–æ–≥—Ä–µ—Å—Å",
      title: "The Validator",
      subtitle: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è –æ ZK",
      advanced: "–§–ò–ù–ê–õ",
      reward: "zk Badge: Validator",
      questionOf: "–í–æ–ø—Ä–æ—Å {current} –∏–∑ {total}",
      nextQuestion: "–°–õ–ï–î–£–Æ–©–ò–ô –í–û–ü–†–û–°",
      showResults: "–ü–û–ö–ê–ó–ê–¢–¨ –†–ï–ó–£–õ–¨–¢–ê–¢–´",
      yourScore: "–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç:",
      passed: "‚úì –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –æ—Å–≤–æ–∏–ª–∏ Aleo!",
      failed: "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑, —á—Ç–æ–±—ã —É–ª—É—á—à–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç.",
      completeMission: "–ó–ê–í–ï–†–®–ò–¢–¨ –ú–ò–°–°–ò–Æ ‚úì",
      restart: "–ù–ê–ß–ê–¢–¨ –ó–ê–ù–û–í–û",
      backButton: "‚Üê –ù–ê–ó–ê–î",
      helpTextStart: "–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã, —á—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ—Å—Ç",
      helpTextRemaining: "–û—Å—Ç–∞–ª–æ—Å—å: {count}",
      passedMessage: "–í—ã –¥–æ–∫–∞–∑–∞–ª–∏ —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è!",
      failedMessage: "–ò–∑—É—á–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞",
      correct: "–ü—Ä–∞–≤–∏–ª—å–Ω–æ!",
      yourAnswer: "–í–∞—à –æ—Ç–≤–µ—Ç:",
      correctAnswer: "–ü—Ä–∞–≤–∏–ª—å–Ω–æ:",
      badgeReceived: "–í—ã –ø–æ–ª—É—á–∏–ª–∏: zk Badge: Validator",
      congratsMessage: "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ –≤—Å–µ –º–∏—Å—Å–∏–∏ ZK Odyssey.",
      returningToMissions: "–í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –∫ —Å–ø–∏—Å–∫—É –º–∏—Å—Å–∏–π...",
      returnButton: "‚Üê –í–ï–†–ù–£–¢–¨–°–Ø",
      correctAnswers: "–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤",
      questions: [
        {
          question: "–ß—Ç–æ —Ç–∞–∫–æ–µ Zero Knowledge Proof?",
          options: [
            "–°–ø–æ—Å–æ–± —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö",
            "–ü—Ä–æ—Ç–æ–∫–æ–ª –¥–ª—è –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –∏—Å—Ç–∏–Ω–Ω–æ—Å—Ç–∏ –±–µ–∑ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏",
            "–ú–µ—Ç–æ–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∏",
            "–ê–ª–≥–æ—Ä–∏—Ç–º —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è"
          ],
          explanation: "ZK-–¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–∏–Ω–Ω–æ—Å—Ç—å —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –±–µ–∑ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."
        },
        {
          question: "–ù–∞ –∫–∞–∫–æ–º —è–∑—ã–∫–µ –ø–∏—à—É—Ç—Å—è –ø—Ä–æ–≥—Ä–∞–º–º—ã –¥–ª—è Aleo?",
          options: [
            "Solidity",
            "Rust",
            "Leo",
            "Move"
          ],
          explanation: "Leo ‚Äî —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —è–∑—ã–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –Ω–∞ Aleo."
        },
        {
          question: "–ß—Ç–æ —Ç–∞–∫–æ–µ record –≤ Leo?",
          options: [
            "–ñ—É—Ä–Ω–∞–ª —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π",
            "–¢–∏–ø –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è",
            "–§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ –±–ª–æ–∫—á–µ–π–Ω",
            "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"
          ],
          explanation: "Record ‚Äî —ç—Ç–æ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–π —Ö—Ä–∞–Ω–∏—Ç –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."
        },
        {
          question: "–ì–¥–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º –Ω–∞ Aleo?",
          options: [
            "–í –±—Ä–∞—É–∑–µ—Ä–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
            "–ù–∞ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞—Ö –±–ª–æ–∫—á–µ–π–Ω–∞",
            "Off-chain —Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤",
            "–í —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞—Ö Ethereum"
          ],
          explanation: "–ü—Ä–æ–≥—Ä–∞–º–º—ã –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è off-chain, –∞ on-chain –≤–∞–ª–∏–¥–∏—Ä—É—é—Ç—Å—è —Ç–æ–ª—å–∫–æ ZK-–¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞."
        },
        {
          question: "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç Prover –≤ ZK-—Å–∏—Å—Ç–µ–º–µ?",
          options: [
            "–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞",
            "–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö",
            "–ú–∞–π–Ω–∏—Ç –±–ª–æ–∫–∏",
            "–•—Ä–∞–Ω–∏—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–ª–æ–∫—á–µ–π–Ω–∞"
          ],
          explanation: "Prover —Å–æ–∑–¥–∞–µ—Ç ZK-–¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ, –∏—Å–ø–æ–ª—å–∑—É—è –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ."
        },
        {
          question: "–ö–∞–∫–∞—è –∫–æ–º–∞–Ω–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –¥–µ–ø–ª–æ—è –ø—Ä–æ–≥—Ä–∞–º–º—ã?",
          options: [
            "leo run",
            "leo build",
            "leo deploy",
            "leo execute"
          ],
          explanation: "–ö–æ–º–∞–Ω–¥–∞ 'leo deploy' –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤ —Å–µ—Ç—å Aleo."
        },
        {
          question: "–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç 'transition' –≤ Leo?",
          options: [
            "–ü–µ—Ä–µ—Ö–æ–¥ –º–µ–∂–¥—É —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏",
            "–ü—É–±–ª–∏—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã",
            "–ü—Ä–∏–≤–∞—Ç–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è",
            "–ò–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∏"
          ],
          explanation: "Transition ‚Äî —ç—Ç–æ –ø—É–±–ª–∏—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã."
        },
        {
          question: "–í —á–µ–º –≥–ª–∞–≤–Ω–æ–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ Aleo?",
          options: [
            "–í—ã—Å–æ–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π",
            "–ü–æ–ª–Ω–∞—è –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å –≤—ã—á–∏—Å–ª–µ–Ω–∏–π –∏ –¥–∞–Ω–Ω—ã—Ö",
            "–ù–∏–∑–∫–∏–µ –∫–æ–º–∏—Å—Å–∏–∏",
            "–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å Ethereum"
          ],
          explanation: "Aleo –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –ø–æ–ª–Ω—É—é –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å —á–µ—Ä–µ–∑ ZK-–¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞, —Å–∫—Ä—ã–≤–∞—è –ª–æ–≥–∏–∫—É –∏ –¥–∞–Ω–Ω—ã–µ."
        },
        {
          question: "–ß—Ç–æ —Ç–∞–∫–æ–µ circuit –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ ZK?",
          options: [
            "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è —Å—Ö–µ–º–∞",
            "–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è",
            "–ê–ª–≥–æ—Ä–∏—Ç–º –∫–æ–Ω—Å–µ–Ω—Å—É—Å–∞",
            "–ü—Ä–æ—Ç–æ–∫–æ–ª —Å–≤—è–∑–∏"
          ],
          explanation: "Circuit ‚Äî —ç—Ç–æ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å—Ö–µ–º–∞, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∞—è –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –¥–ª—è ZK-–¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞."
        },
        {
          question: "–ö–∞–∫–æ–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª –±–µ–∑ –∑–Ω–∞–∫–∞ –≤ Leo?",
          options: [
            "int",
            "number",
            "u32, u64, u128",
            "integer"
          ],
          explanation: "Leo –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–∏–ø—ã u8, u16, u32, u64, u128 –¥–ª—è –±–µ–∑–∑–Ω–∞–∫–æ–≤—ã—Ö —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª."
        }
      ]
    }
  }
};

// Hook –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥–æ–≤
export const useTranslations = (language) => {
  return translations[language] || translations.en;
};

